cache:
    key: "$CI_JOB_NAME"
    untracked: true
    paths:
    - $HOME/.cargo/
    - target/

stages: 
 - test
 - build
 - deploy   

.cargo_test_template: &cargo_test
  stage: test
  before_script:
    - apt-get update && apt-get install -y zip
    - curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
  image: "rustlang/rust:nightly"
  variables:
    CARGO_INCREMENTAL: "0"
    RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"
  script:
    - rm -rf target/
    - cargo build
    - cargo test 
    - |
      zip -0 ccov.zip `find . -name "lexibook*.gc*" -print`;
      ./grcov ccov.zip --llvm --branch --ignore-not-existing --ignore "/*" -t coveralls --vcs-branch "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" --token $COVERALL_TOKEN --service-job-number $CI_JOB_ID --service-name "grcov" --service-pull-request "$CI_MERGE_REQUEST_IID" --commit-sha $CI_COMMIT_SHA > coveralls.json;
      curl -H "Authorization: token  $COVERALL_TOKEN" -F "json_file=@coveralls.json" -F "source_files=[@coveralls.json]" https://coveralls.io/api/v1/jobs 

lint:rustfmt:
  only:
    - merge_requests
  stage: test
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - cargo fmt -- --check

lint:clippy:
  only:
    - merge_requests
  stage: test
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - cargo clippy --all-features -- -D warnings

test:coverage:
  only:
    - merge_requests
  <<: *cargo_test
 
test:master:coverage:
  stage: test
  only:
    - master
  <<: *cargo_test

build:wasm:
  stage: build
  image: "rust:latest"
  only:
    - tags
  before_script:
    - rustup target add wasm32-unknown-unknown
    - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
  script:
    - cd src/wasm
    - wasm-pack build
  artifacts:
    expire_in: 1h
    paths:
      - src/wasm/pkg/ 
pages:
  only:
    - tags
  stage: deploy
  image: node
  dependencies:
    - build:wasm
  script:
    - cd src/wasm/public
    - npm i
    - npm run build
    - cd ../../../
    - rm -rf public
    - mv src/wasm/public/dist public/
  artifacts:
    paths:
      - public

