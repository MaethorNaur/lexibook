// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class Bindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Bindings(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Bindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void __va_start(
    ffi.Pointer<ffi.Pointer<ffi.Int8>> arg0,
  ) {
    return ___va_start(
      arg0,
    );
  }

  late final ___va_start_ptr =
      _lookup<ffi.NativeFunction<_c___va_start>>('__va_start');
  late final _dart___va_start ___va_start =
      ___va_start_ptr.asFunction<_dart___va_start>();

  void __security_init_cookie() {
    return ___security_init_cookie();
  }

  late final ___security_init_cookie_ptr =
      _lookup<ffi.NativeFunction<_c___security_init_cookie>>(
          '__security_init_cookie');
  late final _dart___security_init_cookie ___security_init_cookie =
      ___security_init_cookie_ptr.asFunction<_dart___security_init_cookie>();

  void __security_check_cookie(
    int _StackCookie,
  ) {
    return ___security_check_cookie(
      _StackCookie,
    );
  }

  late final ___security_check_cookie_ptr =
      _lookup<ffi.NativeFunction<_c___security_check_cookie>>(
          '__security_check_cookie');
  late final _dart___security_check_cookie ___security_check_cookie =
      ___security_check_cookie_ptr.asFunction<_dart___security_check_cookie>();

  void __report_gsfailure(
    int _StackCookie,
  ) {
    return ___report_gsfailure(
      _StackCookie,
    );
  }

  late final ___report_gsfailure_ptr =
      _lookup<ffi.NativeFunction<_c___report_gsfailure>>('__report_gsfailure');
  late final _dart___report_gsfailure ___report_gsfailure =
      ___report_gsfailure_ptr.asFunction<_dart___report_gsfailure>();

  late final ffi.Pointer<ffi.Uint64> ___security_cookie =
      _lookup<ffi.Uint64>('__security_cookie');

  int get __security_cookie => ___security_cookie.value;

  set __security_cookie(int value) => ___security_cookie.value = value;

  void _invalid_parameter_noinfo() {
    return __invalid_parameter_noinfo();
  }

  late final __invalid_parameter_noinfo_ptr =
      _lookup<ffi.NativeFunction<_c__invalid_parameter_noinfo>>(
          '_invalid_parameter_noinfo');
  late final _dart__invalid_parameter_noinfo __invalid_parameter_noinfo =
      __invalid_parameter_noinfo_ptr
          .asFunction<_dart__invalid_parameter_noinfo>();

  void _invalid_parameter_noinfo_noreturn() {
    return __invalid_parameter_noinfo_noreturn();
  }

  late final __invalid_parameter_noinfo_noreturn_ptr =
      _lookup<ffi.NativeFunction<_c__invalid_parameter_noinfo_noreturn>>(
          '_invalid_parameter_noinfo_noreturn');
  late final _dart__invalid_parameter_noinfo_noreturn
      __invalid_parameter_noinfo_noreturn =
      __invalid_parameter_noinfo_noreturn_ptr
          .asFunction<_dart__invalid_parameter_noinfo_noreturn>();

  void _invoke_watson(
    ffi.Pointer<ffi.Uint16> _Expression,
    ffi.Pointer<ffi.Uint16> _FunctionName,
    ffi.Pointer<ffi.Uint16> _FileName,
    int _LineNo,
    int _Reserved,
  ) {
    return __invoke_watson(
      _Expression,
      _FunctionName,
      _FileName,
      _LineNo,
      _Reserved,
    );
  }

  late final __invoke_watson_ptr =
      _lookup<ffi.NativeFunction<_c__invoke_watson>>('_invoke_watson');
  late final _dart__invoke_watson __invoke_watson =
      __invoke_watson_ptr.asFunction<_dart__invoke_watson>();

  ffi.Pointer<ffi.Void> _calloc_base(
    int _Count,
    int _Size,
  ) {
    return __calloc_base(
      _Count,
      _Size,
    );
  }

  late final __calloc_base_ptr =
      _lookup<ffi.NativeFunction<_c__calloc_base>>('_calloc_base');
  late final _dart__calloc_base __calloc_base =
      __calloc_base_ptr.asFunction<_dart__calloc_base>();

  ffi.Pointer<ffi.Void> calloc(
    int _Count,
    int _Size,
  ) {
    return _calloc(
      _Count,
      _Size,
    );
  }

  late final _calloc_ptr = _lookup<ffi.NativeFunction<_c_calloc>>('calloc');
  late final _dart_calloc _calloc = _calloc_ptr.asFunction<_dart_calloc>();

  int _callnewh(
    int _Size,
  ) {
    return __callnewh(
      _Size,
    );
  }

  late final __callnewh_ptr =
      _lookup<ffi.NativeFunction<_c__callnewh>>('_callnewh');
  late final _dart__callnewh __callnewh =
      __callnewh_ptr.asFunction<_dart__callnewh>();

  ffi.Pointer<ffi.Void> _expand(
    ffi.Pointer<ffi.Void> _Block,
    int _Size,
  ) {
    return __expand(
      _Block,
      _Size,
    );
  }

  late final __expand_ptr = _lookup<ffi.NativeFunction<_c__expand>>('_expand');
  late final _dart__expand __expand = __expand_ptr.asFunction<_dart__expand>();

  void _free_base(
    ffi.Pointer<ffi.Void> _Block,
  ) {
    return __free_base(
      _Block,
    );
  }

  late final __free_base_ptr =
      _lookup<ffi.NativeFunction<_c__free_base>>('_free_base');
  late final _dart__free_base __free_base =
      __free_base_ptr.asFunction<_dart__free_base>();

  void free(
    ffi.Pointer<ffi.Void> _Block,
  ) {
    return _free(
      _Block,
    );
  }

  late final _free_ptr = _lookup<ffi.NativeFunction<_c_free>>('free');
  late final _dart_free _free = _free_ptr.asFunction<_dart_free>();

  ffi.Pointer<ffi.Void> _malloc_base(
    int _Size,
  ) {
    return __malloc_base(
      _Size,
    );
  }

  late final __malloc_base_ptr =
      _lookup<ffi.NativeFunction<_c__malloc_base>>('_malloc_base');
  late final _dart__malloc_base __malloc_base =
      __malloc_base_ptr.asFunction<_dart__malloc_base>();

  ffi.Pointer<ffi.Void> malloc(
    int _Size,
  ) {
    return _malloc(
      _Size,
    );
  }

  late final _malloc_ptr = _lookup<ffi.NativeFunction<_c_malloc>>('malloc');
  late final _dart_malloc _malloc = _malloc_ptr.asFunction<_dart_malloc>();

  int _msize_base(
    ffi.Pointer<ffi.Void> _Block,
  ) {
    return __msize_base(
      _Block,
    );
  }

  late final __msize_base_ptr =
      _lookup<ffi.NativeFunction<_c__msize_base>>('_msize_base');
  late final _dart__msize_base __msize_base =
      __msize_base_ptr.asFunction<_dart__msize_base>();

  int _msize(
    ffi.Pointer<ffi.Void> _Block,
  ) {
    return __msize(
      _Block,
    );
  }

  late final __msize_ptr = _lookup<ffi.NativeFunction<_c__msize>>('_msize');
  late final _dart__msize __msize = __msize_ptr.asFunction<_dart__msize>();

  ffi.Pointer<ffi.Void> _realloc_base(
    ffi.Pointer<ffi.Void> _Block,
    int _Size,
  ) {
    return __realloc_base(
      _Block,
      _Size,
    );
  }

  late final __realloc_base_ptr =
      _lookup<ffi.NativeFunction<_c__realloc_base>>('_realloc_base');
  late final _dart__realloc_base __realloc_base =
      __realloc_base_ptr.asFunction<_dart__realloc_base>();

  ffi.Pointer<ffi.Void> realloc(
    ffi.Pointer<ffi.Void> _Block,
    int _Size,
  ) {
    return _realloc(
      _Block,
      _Size,
    );
  }

  late final _realloc_ptr = _lookup<ffi.NativeFunction<_c_realloc>>('realloc');
  late final _dart_realloc _realloc = _realloc_ptr.asFunction<_dart_realloc>();

  ffi.Pointer<ffi.Void> _recalloc_base(
    ffi.Pointer<ffi.Void> _Block,
    int _Count,
    int _Size,
  ) {
    return __recalloc_base(
      _Block,
      _Count,
      _Size,
    );
  }

  late final __recalloc_base_ptr =
      _lookup<ffi.NativeFunction<_c__recalloc_base>>('_recalloc_base');
  late final _dart__recalloc_base __recalloc_base =
      __recalloc_base_ptr.asFunction<_dart__recalloc_base>();

  ffi.Pointer<ffi.Void> _recalloc(
    ffi.Pointer<ffi.Void> _Block,
    int _Count,
    int _Size,
  ) {
    return __recalloc(
      _Block,
      _Count,
      _Size,
    );
  }

  late final __recalloc_ptr =
      _lookup<ffi.NativeFunction<_c__recalloc>>('_recalloc');
  late final _dart__recalloc __recalloc =
      __recalloc_ptr.asFunction<_dart__recalloc>();

  void _aligned_free(
    ffi.Pointer<ffi.Void> _Block,
  ) {
    return __aligned_free(
      _Block,
    );
  }

  late final __aligned_free_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_free>>('_aligned_free');
  late final _dart__aligned_free __aligned_free =
      __aligned_free_ptr.asFunction<_dart__aligned_free>();

  ffi.Pointer<ffi.Void> _aligned_malloc(
    int _Size,
    int _Alignment,
  ) {
    return __aligned_malloc(
      _Size,
      _Alignment,
    );
  }

  late final __aligned_malloc_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_malloc>>('_aligned_malloc');
  late final _dart__aligned_malloc __aligned_malloc =
      __aligned_malloc_ptr.asFunction<_dart__aligned_malloc>();

  ffi.Pointer<ffi.Void> _aligned_offset_malloc(
    int _Size,
    int _Alignment,
    int _Offset,
  ) {
    return __aligned_offset_malloc(
      _Size,
      _Alignment,
      _Offset,
    );
  }

  late final __aligned_offset_malloc_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_offset_malloc>>(
          '_aligned_offset_malloc');
  late final _dart__aligned_offset_malloc __aligned_offset_malloc =
      __aligned_offset_malloc_ptr.asFunction<_dart__aligned_offset_malloc>();

  int _aligned_msize(
    ffi.Pointer<ffi.Void> _Block,
    int _Alignment,
    int _Offset,
  ) {
    return __aligned_msize(
      _Block,
      _Alignment,
      _Offset,
    );
  }

  late final __aligned_msize_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_msize>>('_aligned_msize');
  late final _dart__aligned_msize __aligned_msize =
      __aligned_msize_ptr.asFunction<_dart__aligned_msize>();

  ffi.Pointer<ffi.Void> _aligned_offset_realloc(
    ffi.Pointer<ffi.Void> _Block,
    int _Size,
    int _Alignment,
    int _Offset,
  ) {
    return __aligned_offset_realloc(
      _Block,
      _Size,
      _Alignment,
      _Offset,
    );
  }

  late final __aligned_offset_realloc_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_offset_realloc>>(
          '_aligned_offset_realloc');
  late final _dart__aligned_offset_realloc __aligned_offset_realloc =
      __aligned_offset_realloc_ptr.asFunction<_dart__aligned_offset_realloc>();

  ffi.Pointer<ffi.Void> _aligned_offset_recalloc(
    ffi.Pointer<ffi.Void> _Block,
    int _Count,
    int _Size,
    int _Alignment,
    int _Offset,
  ) {
    return __aligned_offset_recalloc(
      _Block,
      _Count,
      _Size,
      _Alignment,
      _Offset,
    );
  }

  late final __aligned_offset_recalloc_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_offset_recalloc>>(
          '_aligned_offset_recalloc');
  late final _dart__aligned_offset_recalloc __aligned_offset_recalloc =
      __aligned_offset_recalloc_ptr
          .asFunction<_dart__aligned_offset_recalloc>();

  ffi.Pointer<ffi.Void> _aligned_realloc(
    ffi.Pointer<ffi.Void> _Block,
    int _Size,
    int _Alignment,
  ) {
    return __aligned_realloc(
      _Block,
      _Size,
      _Alignment,
    );
  }

  late final __aligned_realloc_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_realloc>>('_aligned_realloc');
  late final _dart__aligned_realloc __aligned_realloc =
      __aligned_realloc_ptr.asFunction<_dart__aligned_realloc>();

  ffi.Pointer<ffi.Void> _aligned_recalloc(
    ffi.Pointer<ffi.Void> _Block,
    int _Count,
    int _Size,
    int _Alignment,
  ) {
    return __aligned_recalloc(
      _Block,
      _Count,
      _Size,
      _Alignment,
    );
  }

  late final __aligned_recalloc_ptr =
      _lookup<ffi.NativeFunction<_c__aligned_recalloc>>('_aligned_recalloc');
  late final _dart__aligned_recalloc __aligned_recalloc =
      __aligned_recalloc_ptr.asFunction<_dart__aligned_recalloc>();

  ffi.Pointer<ffi.Int32> _errno() {
    return __errno();
  }

  late final __errno_ptr = _lookup<ffi.NativeFunction<_c__errno>>('_errno');
  late final _dart__errno __errno = __errno_ptr.asFunction<_dart__errno>();

  int _set_errno(
    int _Value,
  ) {
    return __set_errno(
      _Value,
    );
  }

  late final __set_errno_ptr =
      _lookup<ffi.NativeFunction<_c__set_errno>>('_set_errno');
  late final _dart__set_errno __set_errno =
      __set_errno_ptr.asFunction<_dart__set_errno>();

  int _get_errno(
    ffi.Pointer<ffi.Int32> _Value,
  ) {
    return __get_errno(
      _Value,
    );
  }

  late final __get_errno_ptr =
      _lookup<ffi.NativeFunction<_c__get_errno>>('_get_errno');
  late final _dart__get_errno __get_errno =
      __get_errno_ptr.asFunction<_dart__get_errno>();

  int __threadid() {
    return ___threadid();
  }

  late final ___threadid_ptr =
      _lookup<ffi.NativeFunction<_c___threadid>>('__threadid');
  late final _dart___threadid ___threadid =
      ___threadid_ptr.asFunction<_dart___threadid>();

  int __threadhandle() {
    return ___threadhandle();
  }

  late final ___threadhandle_ptr =
      _lookup<ffi.NativeFunction<_c___threadhandle>>('__threadhandle');
  late final _dart___threadhandle ___threadhandle =
      ___threadhandle_ptr.asFunction<_dart___threadhandle>();

  ffi.Pointer<ffi.Void> bsearch_s(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    int _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
        _CompareFunction,
    ffi.Pointer<ffi.Void> _Context,
  ) {
    return _bsearch_s(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
      _Context,
    );
  }

  late final _bsearch_s_ptr =
      _lookup<ffi.NativeFunction<_c_bsearch_s>>('bsearch_s');
  late final _dart_bsearch_s _bsearch_s =
      _bsearch_s_ptr.asFunction<_dart_bsearch_s>();

  void qsort_s(
    ffi.Pointer<ffi.Void> _Base,
    int _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
        _CompareFunction,
    ffi.Pointer<ffi.Void> _Context,
  ) {
    return _qsort_s(
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
      _Context,
    );
  }

  late final _qsort_s_ptr = _lookup<ffi.NativeFunction<_c_qsort_s>>('qsort_s');
  late final _dart_qsort_s _qsort_s = _qsort_s_ptr.asFunction<_dart_qsort_s>();

  ffi.Pointer<ffi.Void> bsearch(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    int _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
        _CompareFunction,
  ) {
    return _bsearch(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
    );
  }

  late final _bsearch_ptr = _lookup<ffi.NativeFunction<_c_bsearch>>('bsearch');
  late final _dart_bsearch _bsearch = _bsearch_ptr.asFunction<_dart_bsearch>();

  void qsort(
    ffi.Pointer<ffi.Void> _Base,
    int _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
        _CompareFunction,
  ) {
    return _qsort(
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
    );
  }

  late final _qsort_ptr = _lookup<ffi.NativeFunction<_c_qsort>>('qsort');
  late final _dart_qsort _qsort = _qsort_ptr.asFunction<_dart_qsort>();

  ffi.Pointer<ffi.Void> _lfind_s(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    ffi.Pointer<ffi.Uint32> _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
        _CompareFunction,
    ffi.Pointer<ffi.Void> _Context,
  ) {
    return __lfind_s(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
      _Context,
    );
  }

  late final __lfind_s_ptr =
      _lookup<ffi.NativeFunction<_c__lfind_s>>('_lfind_s');
  late final _dart__lfind_s __lfind_s =
      __lfind_s_ptr.asFunction<_dart__lfind_s>();

  ffi.Pointer<ffi.Void> _lfind(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    ffi.Pointer<ffi.Uint32> _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
        _CompareFunction,
  ) {
    return __lfind(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
    );
  }

  late final __lfind_ptr = _lookup<ffi.NativeFunction<_c__lfind>>('_lfind');
  late final _dart__lfind __lfind = __lfind_ptr.asFunction<_dart__lfind>();

  ffi.Pointer<ffi.Void> _lsearch_s(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    ffi.Pointer<ffi.Uint32> _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
        _CompareFunction,
    ffi.Pointer<ffi.Void> _Context,
  ) {
    return __lsearch_s(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
      _Context,
    );
  }

  late final __lsearch_s_ptr =
      _lookup<ffi.NativeFunction<_c__lsearch_s>>('_lsearch_s');
  late final _dart__lsearch_s __lsearch_s =
      __lsearch_s_ptr.asFunction<_dart__lsearch_s>();

  ffi.Pointer<ffi.Void> _lsearch(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    ffi.Pointer<ffi.Uint32> _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
        _CompareFunction,
  ) {
    return __lsearch(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
    );
  }

  late final __lsearch_ptr =
      _lookup<ffi.NativeFunction<_c__lsearch>>('_lsearch');
  late final _dart__lsearch __lsearch =
      __lsearch_ptr.asFunction<_dart__lsearch>();

  ffi.Pointer<ffi.Void> lfind(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    ffi.Pointer<ffi.Uint32> _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
        _CompareFunction,
  ) {
    return _lfind_1(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
    );
  }

  late final _lfind_ptr = _lookup<ffi.NativeFunction<_c_lfind>>('lfind');
  late final _dart_lfind _lfind_1 = _lfind_ptr.asFunction<_dart_lfind>();

  ffi.Pointer<ffi.Void> lsearch(
    ffi.Pointer<ffi.Void> _Key,
    ffi.Pointer<ffi.Void> _Base,
    ffi.Pointer<ffi.Uint32> _NumOfElements,
    int _SizeOfElements,
    ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
        _CompareFunction,
  ) {
    return _lsearch_1(
      _Key,
      _Base,
      _NumOfElements,
      _SizeOfElements,
      _CompareFunction,
    );
  }

  late final _lsearch_ptr = _lookup<ffi.NativeFunction<_c_lsearch>>('lsearch');
  late final _dart_lsearch _lsearch_1 =
      _lsearch_ptr.asFunction<_dart_lsearch>();

  int _itow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __itow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __itow_s_ptr = _lookup<ffi.NativeFunction<_c__itow_s>>('_itow_s');
  late final _dart__itow_s __itow_s = __itow_s_ptr.asFunction<_dart__itow_s>();

  ffi.Pointer<ffi.Uint16> _itow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __itow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __itow_ptr = _lookup<ffi.NativeFunction<_c__itow>>('_itow');
  late final _dart__itow __itow = __itow_ptr.asFunction<_dart__itow>();

  int _ltow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ltow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ltow_s_ptr = _lookup<ffi.NativeFunction<_c__ltow_s>>('_ltow_s');
  late final _dart__ltow_s __ltow_s = __ltow_s_ptr.asFunction<_dart__ltow_s>();

  ffi.Pointer<ffi.Uint16> _ltow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __ltow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ltow_ptr = _lookup<ffi.NativeFunction<_c__ltow>>('_ltow');
  late final _dart__ltow __ltow = __ltow_ptr.asFunction<_dart__ltow>();

  int _ultow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ultow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ultow_s_ptr =
      _lookup<ffi.NativeFunction<_c__ultow_s>>('_ultow_s');
  late final _dart__ultow_s __ultow_s =
      __ultow_s_ptr.asFunction<_dart__ultow_s>();

  ffi.Pointer<ffi.Uint16> _ultow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __ultow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ultow_ptr = _lookup<ffi.NativeFunction<_c__ultow>>('_ultow');
  late final _dart__ultow __ultow = __ultow_ptr.asFunction<_dart__ultow>();

  double wcstod(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ) {
    return _wcstod(
      _String,
      _EndPtr,
    );
  }

  late final _wcstod_ptr = _lookup<ffi.NativeFunction<_c_wcstod>>('wcstod');
  late final _dart_wcstod _wcstod = _wcstod_ptr.asFunction<_dart_wcstod>();

  double _wcstod_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstod_l(
      _String,
      _EndPtr,
      _Locale,
    );
  }

  late final __wcstod_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstod_l>>('_wcstod_l');
  late final _dart__wcstod_l __wcstod_l =
      __wcstod_l_ptr.asFunction<_dart__wcstod_l>();

  int wcstol(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstol(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstol_ptr = _lookup<ffi.NativeFunction<_c_wcstol>>('wcstol');
  late final _dart_wcstol _wcstol = _wcstol_ptr.asFunction<_dart_wcstol>();

  int _wcstol_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstol_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstol_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstol_l>>('_wcstol_l');
  late final _dart__wcstol_l __wcstol_l =
      __wcstol_l_ptr.asFunction<_dart__wcstol_l>();

  int wcstoll(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoll(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoll_ptr = _lookup<ffi.NativeFunction<_c_wcstoll>>('wcstoll');
  late final _dart_wcstoll _wcstoll = _wcstoll_ptr.asFunction<_dart_wcstoll>();

  int _wcstoll_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoll_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoll_l>>('_wcstoll_l');
  late final _dart__wcstoll_l __wcstoll_l =
      __wcstoll_l_ptr.asFunction<_dart__wcstoll_l>();

  int wcstoul(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoul(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoul_ptr = _lookup<ffi.NativeFunction<_c_wcstoul>>('wcstoul');
  late final _dart_wcstoul _wcstoul = _wcstoul_ptr.asFunction<_dart_wcstoul>();

  int _wcstoul_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoul_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoul_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoul_l>>('_wcstoul_l');
  late final _dart__wcstoul_l __wcstoul_l =
      __wcstoul_l_ptr.asFunction<_dart__wcstoul_l>();

  int wcstoull(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoull(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoull_ptr =
      _lookup<ffi.NativeFunction<_c_wcstoull>>('wcstoull');
  late final _dart_wcstoull _wcstoull =
      _wcstoull_ptr.asFunction<_dart_wcstoull>();

  int _wcstoull_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoull_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoull_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoull_l>>('_wcstoull_l');
  late final _dart__wcstoull_l __wcstoull_l =
      __wcstoull_l_ptr.asFunction<_dart__wcstoull_l>();

  double wcstof(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ) {
    return _wcstof(
      _String,
      _EndPtr,
    );
  }

  late final _wcstof_ptr = _lookup<ffi.NativeFunction<_c_wcstof>>('wcstof');
  late final _dart_wcstof _wcstof = _wcstof_ptr.asFunction<_dart_wcstof>();

  double _wcstof_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstof_l(
      _String,
      _EndPtr,
      _Locale,
    );
  }

  late final __wcstof_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstof_l>>('_wcstof_l');
  late final _dart__wcstof_l __wcstof_l =
      __wcstof_l_ptr.asFunction<_dart__wcstof_l>();

  double _wtof(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtof(
      _String,
    );
  }

  late final __wtof_ptr = _lookup<ffi.NativeFunction<_c__wtof>>('_wtof');
  late final _dart__wtof __wtof = __wtof_ptr.asFunction<_dart__wtof>();

  double _wtof_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtof_l(
      _String,
      _Locale,
    );
  }

  late final __wtof_l_ptr = _lookup<ffi.NativeFunction<_c__wtof_l>>('_wtof_l');
  late final _dart__wtof_l __wtof_l = __wtof_l_ptr.asFunction<_dart__wtof_l>();

  int _wtoi(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtoi(
      _String,
    );
  }

  late final __wtoi_ptr = _lookup<ffi.NativeFunction<_c__wtoi>>('_wtoi');
  late final _dart__wtoi __wtoi = __wtoi_ptr.asFunction<_dart__wtoi>();

  int _wtoi_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtoi_l(
      _String,
      _Locale,
    );
  }

  late final __wtoi_l_ptr = _lookup<ffi.NativeFunction<_c__wtoi_l>>('_wtoi_l');
  late final _dart__wtoi_l __wtoi_l = __wtoi_l_ptr.asFunction<_dart__wtoi_l>();

  int _wtol(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtol(
      _String,
    );
  }

  late final __wtol_ptr = _lookup<ffi.NativeFunction<_c__wtol>>('_wtol');
  late final _dart__wtol __wtol = __wtol_ptr.asFunction<_dart__wtol>();

  int _wtol_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtol_l(
      _String,
      _Locale,
    );
  }

  late final __wtol_l_ptr = _lookup<ffi.NativeFunction<_c__wtol_l>>('_wtol_l');
  late final _dart__wtol_l __wtol_l = __wtol_l_ptr.asFunction<_dart__wtol_l>();

  int _wtoll(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtoll(
      _String,
    );
  }

  late final __wtoll_ptr = _lookup<ffi.NativeFunction<_c__wtoll>>('_wtoll');
  late final _dart__wtoll __wtoll = __wtoll_ptr.asFunction<_dart__wtoll>();

  int _wtoll_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtoll_l(
      _String,
      _Locale,
    );
  }

  late final __wtoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wtoll_l>>('_wtoll_l');
  late final _dart__wtoll_l __wtoll_l =
      __wtoll_l_ptr.asFunction<_dart__wtoll_l>();

  int _i64tow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __i64tow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __i64tow_s_ptr =
      _lookup<ffi.NativeFunction<_c__i64tow_s>>('_i64tow_s');
  late final _dart__i64tow_s __i64tow_s =
      __i64tow_s_ptr.asFunction<_dart__i64tow_s>();

  ffi.Pointer<ffi.Uint16> _i64tow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __i64tow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __i64tow_ptr = _lookup<ffi.NativeFunction<_c__i64tow>>('_i64tow');
  late final _dart__i64tow __i64tow = __i64tow_ptr.asFunction<_dart__i64tow>();

  int _ui64tow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ui64tow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ui64tow_s_ptr =
      _lookup<ffi.NativeFunction<_c__ui64tow_s>>('_ui64tow_s');
  late final _dart__ui64tow_s __ui64tow_s =
      __ui64tow_s_ptr.asFunction<_dart__ui64tow_s>();

  ffi.Pointer<ffi.Uint16> _ui64tow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __ui64tow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ui64tow_ptr =
      _lookup<ffi.NativeFunction<_c__ui64tow>>('_ui64tow');
  late final _dart__ui64tow __ui64tow =
      __ui64tow_ptr.asFunction<_dart__ui64tow>();

  int _wtoi64(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtoi64(
      _String,
    );
  }

  late final __wtoi64_ptr = _lookup<ffi.NativeFunction<_c__wtoi64>>('_wtoi64');
  late final _dart__wtoi64 __wtoi64 = __wtoi64_ptr.asFunction<_dart__wtoi64>();

  int _wtoi64_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtoi64_l(
      _String,
      _Locale,
    );
  }

  late final __wtoi64_l_ptr =
      _lookup<ffi.NativeFunction<_c__wtoi64_l>>('_wtoi64_l');
  late final _dart__wtoi64_l __wtoi64_l =
      __wtoi64_l_ptr.asFunction<_dart__wtoi64_l>();

  int _wcstoi64(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return __wcstoi64(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final __wcstoi64_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoi64>>('_wcstoi64');
  late final _dart__wcstoi64 __wcstoi64 =
      __wcstoi64_ptr.asFunction<_dart__wcstoi64>();

  int _wcstoi64_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoi64_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoi64_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoi64_l>>('_wcstoi64_l');
  late final _dart__wcstoi64_l __wcstoi64_l =
      __wcstoi64_l_ptr.asFunction<_dart__wcstoi64_l>();

  int _wcstoui64(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return __wcstoui64(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final __wcstoui64_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoui64>>('_wcstoui64');
  late final _dart__wcstoui64 __wcstoui64 =
      __wcstoui64_ptr.asFunction<_dart__wcstoui64>();

  int _wcstoui64_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoui64_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoui64_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoui64_l>>('_wcstoui64_l');
  late final _dart__wcstoui64_l __wcstoui64_l =
      __wcstoui64_l_ptr.asFunction<_dart__wcstoui64_l>();

  ffi.Pointer<ffi.Uint16> _wfullpath(
    ffi.Pointer<ffi.Uint16> _Buffer,
    ffi.Pointer<ffi.Uint16> _Path,
    int _BufferCount,
  ) {
    return __wfullpath(
      _Buffer,
      _Path,
      _BufferCount,
    );
  }

  late final __wfullpath_ptr =
      _lookup<ffi.NativeFunction<_c__wfullpath>>('_wfullpath');
  late final _dart__wfullpath __wfullpath =
      __wfullpath_ptr.asFunction<_dart__wfullpath>();

  int _wmakepath_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _Drive,
    ffi.Pointer<ffi.Uint16> _Dir,
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _Ext,
  ) {
    return __wmakepath_s(
      _Buffer,
      _BufferCount,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __wmakepath_s_ptr =
      _lookup<ffi.NativeFunction<_c__wmakepath_s>>('_wmakepath_s');
  late final _dart__wmakepath_s __wmakepath_s =
      __wmakepath_s_ptr.asFunction<_dart__wmakepath_s>();

  void _wmakepath(
    ffi.Pointer<ffi.Uint16> _Buffer,
    ffi.Pointer<ffi.Uint16> _Drive,
    ffi.Pointer<ffi.Uint16> _Dir,
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _Ext,
  ) {
    return __wmakepath(
      _Buffer,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __wmakepath_ptr =
      _lookup<ffi.NativeFunction<_c__wmakepath>>('_wmakepath');
  late final _dart__wmakepath __wmakepath =
      __wmakepath_ptr.asFunction<_dart__wmakepath>();

  void _wperror(
    ffi.Pointer<ffi.Uint16> _ErrorMessage,
  ) {
    return __wperror(
      _ErrorMessage,
    );
  }

  late final __wperror_ptr =
      _lookup<ffi.NativeFunction<_c__wperror>>('_wperror');
  late final _dart__wperror __wperror =
      __wperror_ptr.asFunction<_dart__wperror>();

  void _wsplitpath(
    ffi.Pointer<ffi.Uint16> _FullPath,
    ffi.Pointer<ffi.Uint16> _Drive,
    ffi.Pointer<ffi.Uint16> _Dir,
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _Ext,
  ) {
    return __wsplitpath(
      _FullPath,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __wsplitpath_ptr =
      _lookup<ffi.NativeFunction<_c__wsplitpath>>('_wsplitpath');
  late final _dart__wsplitpath __wsplitpath =
      __wsplitpath_ptr.asFunction<_dart__wsplitpath>();

  int _wsplitpath_s(
    ffi.Pointer<ffi.Uint16> _FullPath,
    ffi.Pointer<ffi.Uint16> _Drive,
    int _DriveCount,
    ffi.Pointer<ffi.Uint16> _Dir,
    int _DirCount,
    ffi.Pointer<ffi.Uint16> _Filename,
    int _FilenameCount,
    ffi.Pointer<ffi.Uint16> _Ext,
    int _ExtCount,
  ) {
    return __wsplitpath_s(
      _FullPath,
      _Drive,
      _DriveCount,
      _Dir,
      _DirCount,
      _Filename,
      _FilenameCount,
      _Ext,
      _ExtCount,
    );
  }

  late final __wsplitpath_s_ptr =
      _lookup<ffi.NativeFunction<_c__wsplitpath_s>>('_wsplitpath_s');
  late final _dart__wsplitpath_s __wsplitpath_s =
      __wsplitpath_s_ptr.asFunction<_dart__wsplitpath_s>();

  int _wdupenv_s(
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Buffer,
    ffi.Pointer<ffi.Uint64> _BufferCount,
    ffi.Pointer<ffi.Uint16> _VarName,
  ) {
    return __wdupenv_s(
      _Buffer,
      _BufferCount,
      _VarName,
    );
  }

  late final __wdupenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wdupenv_s>>('_wdupenv_s');
  late final _dart__wdupenv_s __wdupenv_s =
      __wdupenv_s_ptr.asFunction<_dart__wdupenv_s>();

  ffi.Pointer<ffi.Uint16> _wgetenv(
    ffi.Pointer<ffi.Uint16> _VarName,
  ) {
    return __wgetenv(
      _VarName,
    );
  }

  late final __wgetenv_ptr =
      _lookup<ffi.NativeFunction<_c__wgetenv>>('_wgetenv');
  late final _dart__wgetenv __wgetenv =
      __wgetenv_ptr.asFunction<_dart__wgetenv>();

  int _wgetenv_s(
    ffi.Pointer<ffi.Uint64> _RequiredCount,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _VarName,
  ) {
    return __wgetenv_s(
      _RequiredCount,
      _Buffer,
      _BufferCount,
      _VarName,
    );
  }

  late final __wgetenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wgetenv_s>>('_wgetenv_s');
  late final _dart__wgetenv_s __wgetenv_s =
      __wgetenv_s_ptr.asFunction<_dart__wgetenv_s>();

  int _wputenv(
    ffi.Pointer<ffi.Uint16> _EnvString,
  ) {
    return __wputenv(
      _EnvString,
    );
  }

  late final __wputenv_ptr =
      _lookup<ffi.NativeFunction<_c__wputenv>>('_wputenv');
  late final _dart__wputenv __wputenv =
      __wputenv_ptr.asFunction<_dart__wputenv>();

  int _wputenv_s(
    ffi.Pointer<ffi.Uint16> _Name,
    ffi.Pointer<ffi.Uint16> _Value,
  ) {
    return __wputenv_s(
      _Name,
      _Value,
    );
  }

  late final __wputenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wputenv_s>>('_wputenv_s');
  late final _dart__wputenv_s __wputenv_s =
      __wputenv_s_ptr.asFunction<_dart__wputenv_s>();

  int _wsearchenv_s(
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _VarName,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
  ) {
    return __wsearchenv_s(
      _Filename,
      _VarName,
      _Buffer,
      _BufferCount,
    );
  }

  late final __wsearchenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wsearchenv_s>>('_wsearchenv_s');
  late final _dart__wsearchenv_s __wsearchenv_s =
      __wsearchenv_s_ptr.asFunction<_dart__wsearchenv_s>();

  void _wsearchenv(
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _VarName,
    ffi.Pointer<ffi.Uint16> _ResultPath,
  ) {
    return __wsearchenv(
      _Filename,
      _VarName,
      _ResultPath,
    );
  }

  late final __wsearchenv_ptr =
      _lookup<ffi.NativeFunction<_c__wsearchenv>>('_wsearchenv');
  late final _dart__wsearchenv __wsearchenv =
      __wsearchenv_ptr.asFunction<_dart__wsearchenv>();

  int _wsystem(
    ffi.Pointer<ffi.Uint16> _Command,
  ) {
    return __wsystem(
      _Command,
    );
  }

  late final __wsystem_ptr =
      _lookup<ffi.NativeFunction<_c__wsystem>>('_wsystem');
  late final _dart__wsystem __wsystem =
      __wsystem_ptr.asFunction<_dart__wsystem>();

  void _swab(
    ffi.Pointer<ffi.Int8> _Buf1,
    ffi.Pointer<ffi.Int8> _Buf2,
    int _SizeInBytes,
  ) {
    return __swab(
      _Buf1,
      _Buf2,
      _SizeInBytes,
    );
  }

  late final __swab_ptr = _lookup<ffi.NativeFunction<_c__swab>>('_swab');
  late final _dart__swab __swab = __swab_ptr.asFunction<_dart__swab>();

  void exit(
    int _Code,
  ) {
    return _exit_1(
      _Code,
    );
  }

  late final _exit_ptr = _lookup<ffi.NativeFunction<_c_exit>>('exit');
  late final _dart_exit _exit_1 = _exit_ptr.asFunction<_dart_exit>();

  void _exit(
    int _Code,
  ) {
    return __exit(
      _Code,
    );
  }

  late final __exit_ptr = _lookup<ffi.NativeFunction<_c__exit>>('_exit');
  late final _dart__exit __exit = __exit_ptr.asFunction<_dart__exit>();

  void _Exit(
    int _Code,
  ) {
    return __Exit(
      _Code,
    );
  }

  late final __Exit_ptr = _lookup<ffi.NativeFunction<_c__Exit>>('_Exit');
  late final _dart__Exit __Exit = __Exit_ptr.asFunction<_dart__Exit>();

  void quick_exit(
    int _Code,
  ) {
    return _quick_exit(
      _Code,
    );
  }

  late final _quick_exit_ptr =
      _lookup<ffi.NativeFunction<_c_quick_exit>>('quick_exit');
  late final _dart_quick_exit _quick_exit =
      _quick_exit_ptr.asFunction<_dart_quick_exit>();

  void abort() {
    return _abort();
  }

  late final _abort_ptr = _lookup<ffi.NativeFunction<_c_abort>>('abort');
  late final _dart_abort _abort = _abort_ptr.asFunction<_dart_abort>();

  int _set_abort_behavior(
    int _Flags,
    int _Mask,
  ) {
    return __set_abort_behavior(
      _Flags,
      _Mask,
    );
  }

  late final __set_abort_behavior_ptr =
      _lookup<ffi.NativeFunction<_c__set_abort_behavior>>(
          '_set_abort_behavior');
  late final _dart__set_abort_behavior __set_abort_behavior =
      __set_abort_behavior_ptr.asFunction<_dart__set_abort_behavior>();

  int atexit(
    ffi.Pointer<ffi.NativeFunction<_typedefC_1>> arg0,
  ) {
    return _atexit(
      arg0,
    );
  }

  late final _atexit_ptr = _lookup<ffi.NativeFunction<_c_atexit>>('atexit');
  late final _dart_atexit _atexit = _atexit_ptr.asFunction<_dart_atexit>();

  ffi.Pointer<ffi.NativeFunction<_onexit_t>> _onexit(
    ffi.Pointer<ffi.NativeFunction<_onexit_t>> _Func,
  ) {
    return __onexit(
      _Func,
    );
  }

  late final __onexit_ptr = _lookup<ffi.NativeFunction<_c__onexit>>('_onexit');
  late final _dart__onexit __onexit = __onexit_ptr.asFunction<_dart__onexit>();

  int at_quick_exit(
    ffi.Pointer<ffi.NativeFunction<_typedefC_2>> arg0,
  ) {
    return _at_quick_exit(
      arg0,
    );
  }

  late final _at_quick_exit_ptr =
      _lookup<ffi.NativeFunction<_c_at_quick_exit>>('at_quick_exit');
  late final _dart_at_quick_exit _at_quick_exit =
      _at_quick_exit_ptr.asFunction<_dart_at_quick_exit>();

  ffi.Pointer<ffi.NativeFunction<_purecall_handler>> _set_purecall_handler(
    ffi.Pointer<ffi.NativeFunction<_purecall_handler>> _Handler,
  ) {
    return __set_purecall_handler(
      _Handler,
    );
  }

  late final __set_purecall_handler_ptr =
      _lookup<ffi.NativeFunction<_c__set_purecall_handler>>(
          '_set_purecall_handler');
  late final _dart__set_purecall_handler __set_purecall_handler =
      __set_purecall_handler_ptr.asFunction<_dart__set_purecall_handler>();

  ffi.Pointer<ffi.NativeFunction<_purecall_handler>> _get_purecall_handler() {
    return __get_purecall_handler();
  }

  late final __get_purecall_handler_ptr =
      _lookup<ffi.NativeFunction<_c__get_purecall_handler>>(
          '_get_purecall_handler');
  late final _dart__get_purecall_handler __get_purecall_handler =
      __get_purecall_handler_ptr.asFunction<_dart__get_purecall_handler>();

  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>>
      _set_invalid_parameter_handler(
    ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> _Handler,
  ) {
    return __set_invalid_parameter_handler(
      _Handler,
    );
  }

  late final __set_invalid_parameter_handler_ptr =
      _lookup<ffi.NativeFunction<_c__set_invalid_parameter_handler>>(
          '_set_invalid_parameter_handler');
  late final _dart__set_invalid_parameter_handler
      __set_invalid_parameter_handler = __set_invalid_parameter_handler_ptr
          .asFunction<_dart__set_invalid_parameter_handler>();

  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>>
      _get_invalid_parameter_handler() {
    return __get_invalid_parameter_handler();
  }

  late final __get_invalid_parameter_handler_ptr =
      _lookup<ffi.NativeFunction<_c__get_invalid_parameter_handler>>(
          '_get_invalid_parameter_handler');
  late final _dart__get_invalid_parameter_handler
      __get_invalid_parameter_handler = __get_invalid_parameter_handler_ptr
          .asFunction<_dart__get_invalid_parameter_handler>();

  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>>
      _set_thread_local_invalid_parameter_handler(
    ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> _Handler,
  ) {
    return __set_thread_local_invalid_parameter_handler(
      _Handler,
    );
  }

  late final __set_thread_local_invalid_parameter_handler_ptr = _lookup<
          ffi.NativeFunction<_c__set_thread_local_invalid_parameter_handler>>(
      '_set_thread_local_invalid_parameter_handler');
  late final _dart__set_thread_local_invalid_parameter_handler
      __set_thread_local_invalid_parameter_handler =
      __set_thread_local_invalid_parameter_handler_ptr
          .asFunction<_dart__set_thread_local_invalid_parameter_handler>();

  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>>
      _get_thread_local_invalid_parameter_handler() {
    return __get_thread_local_invalid_parameter_handler();
  }

  late final __get_thread_local_invalid_parameter_handler_ptr = _lookup<
          ffi.NativeFunction<_c__get_thread_local_invalid_parameter_handler>>(
      '_get_thread_local_invalid_parameter_handler');
  late final _dart__get_thread_local_invalid_parameter_handler
      __get_thread_local_invalid_parameter_handler =
      __get_thread_local_invalid_parameter_handler_ptr
          .asFunction<_dart__get_thread_local_invalid_parameter_handler>();

  int _set_error_mode(
    int _Mode,
  ) {
    return __set_error_mode(
      _Mode,
    );
  }

  late final __set_error_mode_ptr =
      _lookup<ffi.NativeFunction<_c__set_error_mode>>('_set_error_mode');
  late final _dart__set_error_mode __set_error_mode =
      __set_error_mode_ptr.asFunction<_dart__set_error_mode>();

  ffi.Pointer<ffi.Uint64> __doserrno() {
    return ___doserrno();
  }

  late final ___doserrno_ptr =
      _lookup<ffi.NativeFunction<_c___doserrno>>('__doserrno');
  late final _dart___doserrno ___doserrno =
      ___doserrno_ptr.asFunction<_dart___doserrno>();

  int _set_doserrno(
    int _Value,
  ) {
    return __set_doserrno(
      _Value,
    );
  }

  late final __set_doserrno_ptr =
      _lookup<ffi.NativeFunction<_c__set_doserrno>>('_set_doserrno');
  late final _dart__set_doserrno __set_doserrno =
      __set_doserrno_ptr.asFunction<_dart__set_doserrno>();

  int _get_doserrno(
    ffi.Pointer<ffi.Uint64> _Value,
  ) {
    return __get_doserrno(
      _Value,
    );
  }

  late final __get_doserrno_ptr =
      _lookup<ffi.NativeFunction<_c__get_doserrno>>('_get_doserrno');
  late final _dart__get_doserrno __get_doserrno =
      __get_doserrno_ptr.asFunction<_dart__get_doserrno>();

  ffi.Pointer<ffi.Pointer<ffi.Int8>> __sys_errlist() {
    return ___sys_errlist();
  }

  late final ___sys_errlist_ptr =
      _lookup<ffi.NativeFunction<_c___sys_errlist>>('__sys_errlist');
  late final _dart___sys_errlist ___sys_errlist =
      ___sys_errlist_ptr.asFunction<_dart___sys_errlist>();

  ffi.Pointer<ffi.Int32> __sys_nerr() {
    return ___sys_nerr();
  }

  late final ___sys_nerr_ptr =
      _lookup<ffi.NativeFunction<_c___sys_nerr>>('__sys_nerr');
  late final _dart___sys_nerr ___sys_nerr =
      ___sys_nerr_ptr.asFunction<_dart___sys_nerr>();

  void perror(
    ffi.Pointer<ffi.Int8> _ErrMsg,
  ) {
    return _perror(
      _ErrMsg,
    );
  }

  late final _perror_ptr = _lookup<ffi.NativeFunction<_c_perror>>('perror');
  late final _dart_perror _perror = _perror_ptr.asFunction<_dart_perror>();

  ffi.Pointer<ffi.Pointer<ffi.Int8>> __p__pgmptr() {
    return ___p__pgmptr();
  }

  late final ___p__pgmptr_ptr =
      _lookup<ffi.NativeFunction<_c___p__pgmptr>>('__p__pgmptr');
  late final _dart___p__pgmptr ___p__pgmptr =
      ___p__pgmptr_ptr.asFunction<_dart___p__pgmptr>();

  ffi.Pointer<ffi.Pointer<ffi.Uint16>> __p__wpgmptr() {
    return ___p__wpgmptr();
  }

  late final ___p__wpgmptr_ptr =
      _lookup<ffi.NativeFunction<_c___p__wpgmptr>>('__p__wpgmptr');
  late final _dart___p__wpgmptr ___p__wpgmptr =
      ___p__wpgmptr_ptr.asFunction<_dart___p__wpgmptr>();

  ffi.Pointer<ffi.Int32> __p__fmode() {
    return ___p__fmode();
  }

  late final ___p__fmode_ptr =
      _lookup<ffi.NativeFunction<_c___p__fmode>>('__p__fmode');
  late final _dart___p__fmode ___p__fmode =
      ___p__fmode_ptr.asFunction<_dart___p__fmode>();

  int _get_pgmptr(
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _Value,
  ) {
    return __get_pgmptr(
      _Value,
    );
  }

  late final __get_pgmptr_ptr =
      _lookup<ffi.NativeFunction<_c__get_pgmptr>>('_get_pgmptr');
  late final _dart__get_pgmptr __get_pgmptr =
      __get_pgmptr_ptr.asFunction<_dart__get_pgmptr>();

  int _get_wpgmptr(
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Value,
  ) {
    return __get_wpgmptr(
      _Value,
    );
  }

  late final __get_wpgmptr_ptr =
      _lookup<ffi.NativeFunction<_c__get_wpgmptr>>('_get_wpgmptr');
  late final _dart__get_wpgmptr __get_wpgmptr =
      __get_wpgmptr_ptr.asFunction<_dart__get_wpgmptr>();

  int _set_fmode(
    int _Mode,
  ) {
    return __set_fmode(
      _Mode,
    );
  }

  late final __set_fmode_ptr =
      _lookup<ffi.NativeFunction<_c__set_fmode>>('_set_fmode');
  late final _dart__set_fmode __set_fmode =
      __set_fmode_ptr.asFunction<_dart__set_fmode>();

  int _get_fmode(
    ffi.Pointer<ffi.Int32> _PMode,
  ) {
    return __get_fmode(
      _PMode,
    );
  }

  late final __get_fmode_ptr =
      _lookup<ffi.NativeFunction<_c__get_fmode>>('_get_fmode');
  late final _dart__get_fmode __get_fmode =
      __get_fmode_ptr.asFunction<_dart__get_fmode>();

  int abs(
    int _Number,
  ) {
    return _abs(
      _Number,
    );
  }

  late final _abs_ptr = _lookup<ffi.NativeFunction<_c_abs>>('abs');
  late final _dart_abs _abs = _abs_ptr.asFunction<_dart_abs>();

  int labs(
    int _Number,
  ) {
    return _labs(
      _Number,
    );
  }

  late final _labs_ptr = _lookup<ffi.NativeFunction<_c_labs>>('labs');
  late final _dart_labs _labs = _labs_ptr.asFunction<_dart_labs>();

  int llabs(
    int _Number,
  ) {
    return _llabs(
      _Number,
    );
  }

  late final _llabs_ptr = _lookup<ffi.NativeFunction<_c_llabs>>('llabs');
  late final _dart_llabs _llabs = _llabs_ptr.asFunction<_dart_llabs>();

  int _abs64(
    int _Number,
  ) {
    return __abs64(
      _Number,
    );
  }

  late final __abs64_ptr = _lookup<ffi.NativeFunction<_c__abs64>>('_abs64');
  late final _dart__abs64 __abs64 = __abs64_ptr.asFunction<_dart__abs64>();

  int _byteswap_ushort(
    int _Number,
  ) {
    return __byteswap_ushort(
      _Number,
    );
  }

  late final __byteswap_ushort_ptr =
      _lookup<ffi.NativeFunction<_c__byteswap_ushort>>('_byteswap_ushort');
  late final _dart__byteswap_ushort __byteswap_ushort =
      __byteswap_ushort_ptr.asFunction<_dart__byteswap_ushort>();

  int _byteswap_ulong(
    int _Number,
  ) {
    return __byteswap_ulong(
      _Number,
    );
  }

  late final __byteswap_ulong_ptr =
      _lookup<ffi.NativeFunction<_c__byteswap_ulong>>('_byteswap_ulong');
  late final _dart__byteswap_ulong __byteswap_ulong =
      __byteswap_ulong_ptr.asFunction<_dart__byteswap_ulong>();

  int _byteswap_uint64(
    int _Number,
  ) {
    return __byteswap_uint64(
      _Number,
    );
  }

  late final __byteswap_uint64_ptr =
      _lookup<ffi.NativeFunction<_c__byteswap_uint64>>('_byteswap_uint64');
  late final _dart__byteswap_uint64 __byteswap_uint64 =
      __byteswap_uint64_ptr.asFunction<_dart__byteswap_uint64>();

  div_t div(
    int _Numerator,
    int _Denominator,
  ) {
    return _div(
      _Numerator,
      _Denominator,
    );
  }

  late final _div_ptr = _lookup<ffi.NativeFunction<_c_div>>('div');
  late final _dart_div _div = _div_ptr.asFunction<_dart_div>();

  ldiv_t ldiv(
    int _Numerator,
    int _Denominator,
  ) {
    return _ldiv(
      _Numerator,
      _Denominator,
    );
  }

  late final _ldiv_ptr = _lookup<ffi.NativeFunction<_c_ldiv>>('ldiv');
  late final _dart_ldiv _ldiv = _ldiv_ptr.asFunction<_dart_ldiv>();

  lldiv_t lldiv(
    int _Numerator,
    int _Denominator,
  ) {
    return _lldiv(
      _Numerator,
      _Denominator,
    );
  }

  late final _lldiv_ptr = _lookup<ffi.NativeFunction<_c_lldiv>>('lldiv');
  late final _dart_lldiv _lldiv = _lldiv_ptr.asFunction<_dart_lldiv>();

  int _rotl(
    int _Value,
    int _Shift,
  ) {
    return __rotl(
      _Value,
      _Shift,
    );
  }

  late final __rotl_ptr = _lookup<ffi.NativeFunction<_c__rotl>>('_rotl');
  late final _dart__rotl __rotl = __rotl_ptr.asFunction<_dart__rotl>();

  int _lrotl(
    int _Value,
    int _Shift,
  ) {
    return __lrotl(
      _Value,
      _Shift,
    );
  }

  late final __lrotl_ptr = _lookup<ffi.NativeFunction<_c__lrotl>>('_lrotl');
  late final _dart__lrotl __lrotl = __lrotl_ptr.asFunction<_dart__lrotl>();

  int _rotl64(
    int _Value,
    int _Shift,
  ) {
    return __rotl64(
      _Value,
      _Shift,
    );
  }

  late final __rotl64_ptr = _lookup<ffi.NativeFunction<_c__rotl64>>('_rotl64');
  late final _dart__rotl64 __rotl64 = __rotl64_ptr.asFunction<_dart__rotl64>();

  int _rotr(
    int _Value,
    int _Shift,
  ) {
    return __rotr(
      _Value,
      _Shift,
    );
  }

  late final __rotr_ptr = _lookup<ffi.NativeFunction<_c__rotr>>('_rotr');
  late final _dart__rotr __rotr = __rotr_ptr.asFunction<_dart__rotr>();

  int _lrotr(
    int _Value,
    int _Shift,
  ) {
    return __lrotr(
      _Value,
      _Shift,
    );
  }

  late final __lrotr_ptr = _lookup<ffi.NativeFunction<_c__lrotr>>('_lrotr');
  late final _dart__lrotr __lrotr = __lrotr_ptr.asFunction<_dart__lrotr>();

  int _rotr64(
    int _Value,
    int _Shift,
  ) {
    return __rotr64(
      _Value,
      _Shift,
    );
  }

  late final __rotr64_ptr = _lookup<ffi.NativeFunction<_c__rotr64>>('_rotr64');
  late final _dart__rotr64 __rotr64 = __rotr64_ptr.asFunction<_dart__rotr64>();

  void srand(
    int _Seed,
  ) {
    return _srand(
      _Seed,
    );
  }

  late final _srand_ptr = _lookup<ffi.NativeFunction<_c_srand>>('srand');
  late final _dart_srand _srand = _srand_ptr.asFunction<_dart_srand>();

  int rand() {
    return _rand();
  }

  late final _rand_ptr = _lookup<ffi.NativeFunction<_c_rand>>('rand');
  late final _dart_rand _rand = _rand_ptr.asFunction<_dart_rand>();

  double atof(
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return _atof(
      _String,
    );
  }

  late final _atof_ptr = _lookup<ffi.NativeFunction<_c_atof>>('atof');
  late final _dart_atof _atof = _atof_ptr.asFunction<_dart_atof>();

  int atoi(
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return _atoi(
      _String,
    );
  }

  late final _atoi_ptr = _lookup<ffi.NativeFunction<_c_atoi>>('atoi');
  late final _dart_atoi _atoi = _atoi_ptr.asFunction<_dart_atoi>();

  int atol(
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return _atol(
      _String,
    );
  }

  late final _atol_ptr = _lookup<ffi.NativeFunction<_c_atol>>('atol');
  late final _dart_atol _atol = _atol_ptr.asFunction<_dart_atol>();

  int atoll(
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return _atoll(
      _String,
    );
  }

  late final _atoll_ptr = _lookup<ffi.NativeFunction<_c_atoll>>('atoll');
  late final _dart_atoll _atoll = _atoll_ptr.asFunction<_dart_atoll>();

  int _atoi64(
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return __atoi64(
      _String,
    );
  }

  late final __atoi64_ptr = _lookup<ffi.NativeFunction<_c__atoi64>>('_atoi64');
  late final _dart__atoi64 __atoi64 = __atoi64_ptr.asFunction<_dart__atoi64>();

  double _atof_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atof_l(
      _String,
      _Locale,
    );
  }

  late final __atof_l_ptr = _lookup<ffi.NativeFunction<_c__atof_l>>('_atof_l');
  late final _dart__atof_l __atof_l = __atof_l_ptr.asFunction<_dart__atof_l>();

  int _atoi_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atoi_l(
      _String,
      _Locale,
    );
  }

  late final __atoi_l_ptr = _lookup<ffi.NativeFunction<_c__atoi_l>>('_atoi_l');
  late final _dart__atoi_l __atoi_l = __atoi_l_ptr.asFunction<_dart__atoi_l>();

  int _atol_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atol_l(
      _String,
      _Locale,
    );
  }

  late final __atol_l_ptr = _lookup<ffi.NativeFunction<_c__atol_l>>('_atol_l');
  late final _dart__atol_l __atol_l = __atol_l_ptr.asFunction<_dart__atol_l>();

  int _atoll_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atoll_l(
      _String,
      _Locale,
    );
  }

  late final __atoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__atoll_l>>('_atoll_l');
  late final _dart__atoll_l __atoll_l =
      __atoll_l_ptr.asFunction<_dart__atoll_l>();

  int _atoi64_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atoi64_l(
      _String,
      _Locale,
    );
  }

  late final __atoi64_l_ptr =
      _lookup<ffi.NativeFunction<_c__atoi64_l>>('_atoi64_l');
  late final _dart__atoi64_l __atoi64_l =
      __atoi64_l_ptr.asFunction<_dart__atoi64_l>();

  int _atoflt(
    ffi.Pointer<_CRT_FLOAT> _Result,
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return __atoflt(
      _Result,
      _String,
    );
  }

  late final __atoflt_ptr = _lookup<ffi.NativeFunction<_c__atoflt>>('_atoflt');
  late final _dart__atoflt __atoflt = __atoflt_ptr.asFunction<_dart__atoflt>();

  int _atodbl(
    ffi.Pointer<_CRT_DOUBLE> _Result,
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return __atodbl(
      _Result,
      _String,
    );
  }

  late final __atodbl_ptr = _lookup<ffi.NativeFunction<_c__atodbl>>('_atodbl');
  late final _dart__atodbl __atodbl = __atodbl_ptr.asFunction<_dart__atodbl>();

  int _atoldbl(
    ffi.Pointer<_LDOUBLE> _Result,
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return __atoldbl(
      _Result,
      _String,
    );
  }

  late final __atoldbl_ptr =
      _lookup<ffi.NativeFunction<_c__atoldbl>>('_atoldbl');
  late final _dart__atoldbl __atoldbl =
      __atoldbl_ptr.asFunction<_dart__atoldbl>();

  int _atoflt_l(
    ffi.Pointer<_CRT_FLOAT> _Result,
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atoflt_l(
      _Result,
      _String,
      _Locale,
    );
  }

  late final __atoflt_l_ptr =
      _lookup<ffi.NativeFunction<_c__atoflt_l>>('_atoflt_l');
  late final _dart__atoflt_l __atoflt_l =
      __atoflt_l_ptr.asFunction<_dart__atoflt_l>();

  int _atodbl_l(
    ffi.Pointer<_CRT_DOUBLE> _Result,
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atodbl_l(
      _Result,
      _String,
      _Locale,
    );
  }

  late final __atodbl_l_ptr =
      _lookup<ffi.NativeFunction<_c__atodbl_l>>('_atodbl_l');
  late final _dart__atodbl_l __atodbl_l =
      __atodbl_l_ptr.asFunction<_dart__atodbl_l>();

  int _atoldbl_l(
    ffi.Pointer<_LDOUBLE> _Result,
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __atoldbl_l(
      _Result,
      _String,
      _Locale,
    );
  }

  late final __atoldbl_l_ptr =
      _lookup<ffi.NativeFunction<_c__atoldbl_l>>('_atoldbl_l');
  late final _dart__atoldbl_l __atoldbl_l =
      __atoldbl_l_ptr.asFunction<_dart__atoldbl_l>();

  double strtof(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ) {
    return _strtof(
      _String,
      _EndPtr,
    );
  }

  late final _strtof_ptr = _lookup<ffi.NativeFunction<_c_strtof>>('strtof');
  late final _dart_strtof _strtof = _strtof_ptr.asFunction<_dart_strtof>();

  double _strtof_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtof_l(
      _String,
      _EndPtr,
      _Locale,
    );
  }

  late final __strtof_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtof_l>>('_strtof_l');
  late final _dart__strtof_l __strtof_l =
      __strtof_l_ptr.asFunction<_dart__strtof_l>();

  double strtod(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ) {
    return _strtod(
      _String,
      _EndPtr,
    );
  }

  late final _strtod_ptr = _lookup<ffi.NativeFunction<_c_strtod>>('strtod');
  late final _dart_strtod _strtod = _strtod_ptr.asFunction<_dart_strtod>();

  double _strtod_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtod_l(
      _String,
      _EndPtr,
      _Locale,
    );
  }

  late final __strtod_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtod_l>>('_strtod_l');
  late final _dart__strtod_l __strtod_l =
      __strtod_l_ptr.asFunction<_dart__strtod_l>();

  int strtol(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
  ) {
    return _strtol(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _strtol_ptr = _lookup<ffi.NativeFunction<_c_strtol>>('strtol');
  late final _dart_strtol _strtol = _strtol_ptr.asFunction<_dart_strtol>();

  int _strtol_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtol_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtol_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtol_l>>('_strtol_l');
  late final _dart__strtol_l __strtol_l =
      __strtol_l_ptr.asFunction<_dart__strtol_l>();

  int strtoll(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
  ) {
    return _strtoll(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _strtoll_ptr = _lookup<ffi.NativeFunction<_c_strtoll>>('strtoll');
  late final _dart_strtoll _strtoll = _strtoll_ptr.asFunction<_dart_strtoll>();

  int _strtoll_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtoll_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtoll_l>>('_strtoll_l');
  late final _dart__strtoll_l __strtoll_l =
      __strtoll_l_ptr.asFunction<_dart__strtoll_l>();

  int strtoul(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
  ) {
    return _strtoul(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _strtoul_ptr = _lookup<ffi.NativeFunction<_c_strtoul>>('strtoul');
  late final _dart_strtoul _strtoul = _strtoul_ptr.asFunction<_dart_strtoul>();

  int _strtoul_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtoul_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoul_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtoul_l>>('_strtoul_l');
  late final _dart__strtoul_l __strtoul_l =
      __strtoul_l_ptr.asFunction<_dart__strtoul_l>();

  int strtoull(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
  ) {
    return _strtoull(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _strtoull_ptr =
      _lookup<ffi.NativeFunction<_c_strtoull>>('strtoull');
  late final _dart_strtoull _strtoull =
      _strtoull_ptr.asFunction<_dart_strtoull>();

  int _strtoull_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtoull_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoull_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtoull_l>>('_strtoull_l');
  late final _dart__strtoull_l __strtoull_l =
      __strtoull_l_ptr.asFunction<_dart__strtoull_l>();

  int _strtoi64(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
  ) {
    return __strtoi64(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final __strtoi64_ptr =
      _lookup<ffi.NativeFunction<_c__strtoi64>>('_strtoi64');
  late final _dart__strtoi64 __strtoi64 =
      __strtoi64_ptr.asFunction<_dart__strtoi64>();

  int _strtoi64_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtoi64_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoi64_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtoi64_l>>('_strtoi64_l');
  late final _dart__strtoi64_l __strtoi64_l =
      __strtoi64_l_ptr.asFunction<_dart__strtoi64_l>();

  int _strtoui64(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
  ) {
    return __strtoui64(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final __strtoui64_ptr =
      _lookup<ffi.NativeFunction<_c__strtoui64>>('_strtoui64');
  late final _dart__strtoui64 __strtoui64 =
      __strtoui64_ptr.asFunction<_dart__strtoui64>();

  int _strtoui64_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __strtoui64_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoui64_l_ptr =
      _lookup<ffi.NativeFunction<_c__strtoui64_l>>('_strtoui64_l');
  late final _dart__strtoui64_l __strtoui64_l =
      __strtoui64_l_ptr.asFunction<_dart__strtoui64_l>();

  int _itoa_s(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __itoa_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __itoa_s_ptr = _lookup<ffi.NativeFunction<_c__itoa_s>>('_itoa_s');
  late final _dart__itoa_s __itoa_s = __itoa_s_ptr.asFunction<_dart__itoa_s>();

  ffi.Pointer<ffi.Int8> _itoa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return __itoa(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __itoa_ptr = _lookup<ffi.NativeFunction<_c__itoa>>('_itoa');
  late final _dart__itoa __itoa = __itoa_ptr.asFunction<_dart__itoa>();

  int _ltoa_s(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ltoa_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ltoa_s_ptr = _lookup<ffi.NativeFunction<_c__ltoa_s>>('_ltoa_s');
  late final _dart__ltoa_s __ltoa_s = __ltoa_s_ptr.asFunction<_dart__ltoa_s>();

  ffi.Pointer<ffi.Int8> _ltoa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return __ltoa(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ltoa_ptr = _lookup<ffi.NativeFunction<_c__ltoa>>('_ltoa');
  late final _dart__ltoa __ltoa = __ltoa_ptr.asFunction<_dart__ltoa>();

  int _ultoa_s(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ultoa_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ultoa_s_ptr =
      _lookup<ffi.NativeFunction<_c__ultoa_s>>('_ultoa_s');
  late final _dart__ultoa_s __ultoa_s =
      __ultoa_s_ptr.asFunction<_dart__ultoa_s>();

  ffi.Pointer<ffi.Int8> _ultoa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return __ultoa(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ultoa_ptr = _lookup<ffi.NativeFunction<_c__ultoa>>('_ultoa');
  late final _dart__ultoa __ultoa = __ultoa_ptr.asFunction<_dart__ultoa>();

  int _i64toa_s(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __i64toa_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __i64toa_s_ptr =
      _lookup<ffi.NativeFunction<_c__i64toa_s>>('_i64toa_s');
  late final _dart__i64toa_s __i64toa_s =
      __i64toa_s_ptr.asFunction<_dart__i64toa_s>();

  ffi.Pointer<ffi.Int8> _i64toa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return __i64toa(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __i64toa_ptr = _lookup<ffi.NativeFunction<_c__i64toa>>('_i64toa');
  late final _dart__i64toa __i64toa = __i64toa_ptr.asFunction<_dart__i64toa>();

  int _ui64toa_s(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ui64toa_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ui64toa_s_ptr =
      _lookup<ffi.NativeFunction<_c__ui64toa_s>>('_ui64toa_s');
  late final _dart__ui64toa_s __ui64toa_s =
      __ui64toa_s_ptr.asFunction<_dart__ui64toa_s>();

  ffi.Pointer<ffi.Int8> _ui64toa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return __ui64toa(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ui64toa_ptr =
      _lookup<ffi.NativeFunction<_c__ui64toa>>('_ui64toa');
  late final _dart__ui64toa __ui64toa =
      __ui64toa_ptr.asFunction<_dart__ui64toa>();

  int _ecvt_s(
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    double _Value,
    int _DigitCount,
    ffi.Pointer<ffi.Int32> _PtDec,
    ffi.Pointer<ffi.Int32> _PtSign,
  ) {
    return __ecvt_s(
      _Buffer,
      _BufferCount,
      _Value,
      _DigitCount,
      _PtDec,
      _PtSign,
    );
  }

  late final __ecvt_s_ptr = _lookup<ffi.NativeFunction<_c__ecvt_s>>('_ecvt_s');
  late final _dart__ecvt_s __ecvt_s = __ecvt_s_ptr.asFunction<_dart__ecvt_s>();

  ffi.Pointer<ffi.Int8> _ecvt(
    double _Value,
    int _DigitCount,
    ffi.Pointer<ffi.Int32> _PtDec,
    ffi.Pointer<ffi.Int32> _PtSign,
  ) {
    return __ecvt(
      _Value,
      _DigitCount,
      _PtDec,
      _PtSign,
    );
  }

  late final __ecvt_ptr = _lookup<ffi.NativeFunction<_c__ecvt>>('_ecvt');
  late final _dart__ecvt __ecvt = __ecvt_ptr.asFunction<_dart__ecvt>();

  int _fcvt_s(
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    double _Value,
    int _FractionalDigitCount,
    ffi.Pointer<ffi.Int32> _PtDec,
    ffi.Pointer<ffi.Int32> _PtSign,
  ) {
    return __fcvt_s(
      _Buffer,
      _BufferCount,
      _Value,
      _FractionalDigitCount,
      _PtDec,
      _PtSign,
    );
  }

  late final __fcvt_s_ptr = _lookup<ffi.NativeFunction<_c__fcvt_s>>('_fcvt_s');
  late final _dart__fcvt_s __fcvt_s = __fcvt_s_ptr.asFunction<_dart__fcvt_s>();

  ffi.Pointer<ffi.Int8> _fcvt(
    double _Value,
    int _FractionalDigitCount,
    ffi.Pointer<ffi.Int32> _PtDec,
    ffi.Pointer<ffi.Int32> _PtSign,
  ) {
    return __fcvt(
      _Value,
      _FractionalDigitCount,
      _PtDec,
      _PtSign,
    );
  }

  late final __fcvt_ptr = _lookup<ffi.NativeFunction<_c__fcvt>>('_fcvt');
  late final _dart__fcvt __fcvt = __fcvt_ptr.asFunction<_dart__fcvt>();

  int _gcvt_s(
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    double _Value,
    int _DigitCount,
  ) {
    return __gcvt_s(
      _Buffer,
      _BufferCount,
      _Value,
      _DigitCount,
    );
  }

  late final __gcvt_s_ptr = _lookup<ffi.NativeFunction<_c__gcvt_s>>('_gcvt_s');
  late final _dart__gcvt_s __gcvt_s = __gcvt_s_ptr.asFunction<_dart__gcvt_s>();

  ffi.Pointer<ffi.Int8> _gcvt(
    double _Value,
    int _DigitCount,
    ffi.Pointer<ffi.Int8> _Buffer,
  ) {
    return __gcvt(
      _Value,
      _DigitCount,
      _Buffer,
    );
  }

  late final __gcvt_ptr = _lookup<ffi.NativeFunction<_c__gcvt>>('_gcvt');
  late final _dart__gcvt __gcvt = __gcvt_ptr.asFunction<_dart__gcvt>();

  int ___mb_cur_max_func() {
    return ____mb_cur_max_func();
  }

  late final ____mb_cur_max_func_ptr =
      _lookup<ffi.NativeFunction<_c____mb_cur_max_func>>('___mb_cur_max_func');
  late final _dart____mb_cur_max_func ____mb_cur_max_func =
      ____mb_cur_max_func_ptr.asFunction<_dart____mb_cur_max_func>();

  int ___mb_cur_max_l_func(
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return ____mb_cur_max_l_func(
      _Locale,
    );
  }

  late final ____mb_cur_max_l_func_ptr =
      _lookup<ffi.NativeFunction<_c____mb_cur_max_l_func>>(
          '___mb_cur_max_l_func');
  late final _dart____mb_cur_max_l_func ____mb_cur_max_l_func =
      ____mb_cur_max_l_func_ptr.asFunction<_dart____mb_cur_max_l_func>();

  int mblen(
    ffi.Pointer<ffi.Int8> _Ch,
    int _MaxCount,
  ) {
    return _mblen(
      _Ch,
      _MaxCount,
    );
  }

  late final _mblen_ptr = _lookup<ffi.NativeFunction<_c_mblen>>('mblen');
  late final _dart_mblen _mblen = _mblen_ptr.asFunction<_dart_mblen>();

  int _mblen_l(
    ffi.Pointer<ffi.Int8> _Ch,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __mblen_l(
      _Ch,
      _MaxCount,
      _Locale,
    );
  }

  late final __mblen_l_ptr =
      _lookup<ffi.NativeFunction<_c__mblen_l>>('_mblen_l');
  late final _dart__mblen_l __mblen_l =
      __mblen_l_ptr.asFunction<_dart__mblen_l>();

  int _mbstrlen(
    ffi.Pointer<ffi.Int8> _String,
  ) {
    return __mbstrlen(
      _String,
    );
  }

  late final __mbstrlen_ptr =
      _lookup<ffi.NativeFunction<_c__mbstrlen>>('_mbstrlen');
  late final _dart__mbstrlen __mbstrlen =
      __mbstrlen_ptr.asFunction<_dart__mbstrlen>();

  int _mbstrlen_l(
    ffi.Pointer<ffi.Int8> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __mbstrlen_l(
      _String,
      _Locale,
    );
  }

  late final __mbstrlen_l_ptr =
      _lookup<ffi.NativeFunction<_c__mbstrlen_l>>('_mbstrlen_l');
  late final _dart__mbstrlen_l __mbstrlen_l =
      __mbstrlen_l_ptr.asFunction<_dart__mbstrlen_l>();

  int _mbstrnlen(
    ffi.Pointer<ffi.Int8> _String,
    int _MaxCount,
  ) {
    return __mbstrnlen(
      _String,
      _MaxCount,
    );
  }

  late final __mbstrnlen_ptr =
      _lookup<ffi.NativeFunction<_c__mbstrnlen>>('_mbstrnlen');
  late final _dart__mbstrnlen __mbstrnlen =
      __mbstrnlen_ptr.asFunction<_dart__mbstrnlen>();

  int _mbstrnlen_l(
    ffi.Pointer<ffi.Int8> _String,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __mbstrnlen_l(
      _String,
      _MaxCount,
      _Locale,
    );
  }

  late final __mbstrnlen_l_ptr =
      _lookup<ffi.NativeFunction<_c__mbstrnlen_l>>('_mbstrnlen_l');
  late final _dart__mbstrnlen_l __mbstrnlen_l =
      __mbstrnlen_l_ptr.asFunction<_dart__mbstrnlen_l>();

  int mbtowc(
    ffi.Pointer<ffi.Uint16> _DstCh,
    ffi.Pointer<ffi.Int8> _SrcCh,
    int _SrcSizeInBytes,
  ) {
    return _mbtowc(
      _DstCh,
      _SrcCh,
      _SrcSizeInBytes,
    );
  }

  late final _mbtowc_ptr = _lookup<ffi.NativeFunction<_c_mbtowc>>('mbtowc');
  late final _dart_mbtowc _mbtowc = _mbtowc_ptr.asFunction<_dart_mbtowc>();

  int _mbtowc_l(
    ffi.Pointer<ffi.Uint16> _DstCh,
    ffi.Pointer<ffi.Int8> _SrcCh,
    int _SrcSizeInBytes,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __mbtowc_l(
      _DstCh,
      _SrcCh,
      _SrcSizeInBytes,
      _Locale,
    );
  }

  late final __mbtowc_l_ptr =
      _lookup<ffi.NativeFunction<_c__mbtowc_l>>('_mbtowc_l');
  late final _dart__mbtowc_l __mbtowc_l =
      __mbtowc_l_ptr.asFunction<_dart__mbtowc_l>();

  int mbstowcs_s(
    ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
    ffi.Pointer<ffi.Uint16> _DstBuf,
    int _SizeInWords,
    ffi.Pointer<ffi.Int8> _SrcBuf,
    int _MaxCount,
  ) {
    return _mbstowcs_s(
      _PtNumOfCharConverted,
      _DstBuf,
      _SizeInWords,
      _SrcBuf,
      _MaxCount,
    );
  }

  late final _mbstowcs_s_ptr =
      _lookup<ffi.NativeFunction<_c_mbstowcs_s>>('mbstowcs_s');
  late final _dart_mbstowcs_s _mbstowcs_s =
      _mbstowcs_s_ptr.asFunction<_dart_mbstowcs_s>();

  int mbstowcs(
    ffi.Pointer<ffi.Uint16> _Dest,
    ffi.Pointer<ffi.Int8> _Source,
    int _MaxCount,
  ) {
    return _mbstowcs(
      _Dest,
      _Source,
      _MaxCount,
    );
  }

  late final _mbstowcs_ptr =
      _lookup<ffi.NativeFunction<_c_mbstowcs>>('mbstowcs');
  late final _dart_mbstowcs _mbstowcs =
      _mbstowcs_ptr.asFunction<_dart_mbstowcs>();

  int _mbstowcs_s_l(
    ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
    ffi.Pointer<ffi.Uint16> _DstBuf,
    int _SizeInWords,
    ffi.Pointer<ffi.Int8> _SrcBuf,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __mbstowcs_s_l(
      _PtNumOfCharConverted,
      _DstBuf,
      _SizeInWords,
      _SrcBuf,
      _MaxCount,
      _Locale,
    );
  }

  late final __mbstowcs_s_l_ptr =
      _lookup<ffi.NativeFunction<_c__mbstowcs_s_l>>('_mbstowcs_s_l');
  late final _dart__mbstowcs_s_l __mbstowcs_s_l =
      __mbstowcs_s_l_ptr.asFunction<_dart__mbstowcs_s_l>();

  int _mbstowcs_l(
    ffi.Pointer<ffi.Uint16> _Dest,
    ffi.Pointer<ffi.Int8> _Source,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __mbstowcs_l(
      _Dest,
      _Source,
      _MaxCount,
      _Locale,
    );
  }

  late final __mbstowcs_l_ptr =
      _lookup<ffi.NativeFunction<_c__mbstowcs_l>>('_mbstowcs_l');
  late final _dart__mbstowcs_l __mbstowcs_l =
      __mbstowcs_l_ptr.asFunction<_dart__mbstowcs_l>();

  int wctomb(
    ffi.Pointer<ffi.Int8> _MbCh,
    int _WCh,
  ) {
    return _wctomb(
      _MbCh,
      _WCh,
    );
  }

  late final _wctomb_ptr = _lookup<ffi.NativeFunction<_c_wctomb>>('wctomb');
  late final _dart_wctomb _wctomb = _wctomb_ptr.asFunction<_dart_wctomb>();

  int _wctomb_l(
    ffi.Pointer<ffi.Int8> _MbCh,
    int _WCh,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wctomb_l(
      _MbCh,
      _WCh,
      _Locale,
    );
  }

  late final __wctomb_l_ptr =
      _lookup<ffi.NativeFunction<_c__wctomb_l>>('_wctomb_l');
  late final _dart__wctomb_l __wctomb_l =
      __wctomb_l_ptr.asFunction<_dart__wctomb_l>();

  int wctomb_s(
    ffi.Pointer<ffi.Int32> _SizeConverted,
    ffi.Pointer<ffi.Int8> _MbCh,
    int _SizeInBytes,
    int _WCh,
  ) {
    return _wctomb_s(
      _SizeConverted,
      _MbCh,
      _SizeInBytes,
      _WCh,
    );
  }

  late final _wctomb_s_ptr =
      _lookup<ffi.NativeFunction<_c_wctomb_s>>('wctomb_s');
  late final _dart_wctomb_s _wctomb_s =
      _wctomb_s_ptr.asFunction<_dart_wctomb_s>();

  int _wctomb_s_l(
    ffi.Pointer<ffi.Int32> _SizeConverted,
    ffi.Pointer<ffi.Int8> _MbCh,
    int _SizeInBytes,
    int _WCh,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wctomb_s_l(
      _SizeConverted,
      _MbCh,
      _SizeInBytes,
      _WCh,
      _Locale,
    );
  }

  late final __wctomb_s_l_ptr =
      _lookup<ffi.NativeFunction<_c__wctomb_s_l>>('_wctomb_s_l');
  late final _dart__wctomb_s_l __wctomb_s_l =
      __wctomb_s_l_ptr.asFunction<_dart__wctomb_s_l>();

  int wcstombs_s(
    ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
    ffi.Pointer<ffi.Int8> _Dst,
    int _DstSizeInBytes,
    ffi.Pointer<ffi.Uint16> _Src,
    int _MaxCountInBytes,
  ) {
    return _wcstombs_s(
      _PtNumOfCharConverted,
      _Dst,
      _DstSizeInBytes,
      _Src,
      _MaxCountInBytes,
    );
  }

  late final _wcstombs_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcstombs_s>>('wcstombs_s');
  late final _dart_wcstombs_s _wcstombs_s =
      _wcstombs_s_ptr.asFunction<_dart_wcstombs_s>();

  int wcstombs(
    ffi.Pointer<ffi.Int8> _Dest,
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
  ) {
    return _wcstombs(
      _Dest,
      _Source,
      _MaxCount,
    );
  }

  late final _wcstombs_ptr =
      _lookup<ffi.NativeFunction<_c_wcstombs>>('wcstombs');
  late final _dart_wcstombs _wcstombs =
      _wcstombs_ptr.asFunction<_dart_wcstombs>();

  int _wcstombs_s_l(
    ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
    ffi.Pointer<ffi.Int8> _Dst,
    int _DstSizeInBytes,
    ffi.Pointer<ffi.Uint16> _Src,
    int _MaxCountInBytes,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstombs_s_l(
      _PtNumOfCharConverted,
      _Dst,
      _DstSizeInBytes,
      _Src,
      _MaxCountInBytes,
      _Locale,
    );
  }

  late final __wcstombs_s_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstombs_s_l>>('_wcstombs_s_l');
  late final _dart__wcstombs_s_l __wcstombs_s_l =
      __wcstombs_s_l_ptr.asFunction<_dart__wcstombs_s_l>();

  int _wcstombs_l(
    ffi.Pointer<ffi.Int8> _Dest,
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstombs_l(
      _Dest,
      _Source,
      _MaxCount,
      _Locale,
    );
  }

  late final __wcstombs_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstombs_l>>('_wcstombs_l');
  late final _dart__wcstombs_l __wcstombs_l =
      __wcstombs_l_ptr.asFunction<_dart__wcstombs_l>();

  ffi.Pointer<ffi.Int8> _fullpath(
    ffi.Pointer<ffi.Int8> _Buffer,
    ffi.Pointer<ffi.Int8> _Path,
    int _BufferCount,
  ) {
    return __fullpath(
      _Buffer,
      _Path,
      _BufferCount,
    );
  }

  late final __fullpath_ptr =
      _lookup<ffi.NativeFunction<_c__fullpath>>('_fullpath');
  late final _dart__fullpath __fullpath =
      __fullpath_ptr.asFunction<_dart__fullpath>();

  int _makepath_s(
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Int8> _Drive,
    ffi.Pointer<ffi.Int8> _Dir,
    ffi.Pointer<ffi.Int8> _Filename,
    ffi.Pointer<ffi.Int8> _Ext,
  ) {
    return __makepath_s(
      _Buffer,
      _BufferCount,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __makepath_s_ptr =
      _lookup<ffi.NativeFunction<_c__makepath_s>>('_makepath_s');
  late final _dart__makepath_s __makepath_s =
      __makepath_s_ptr.asFunction<_dart__makepath_s>();

  void _makepath(
    ffi.Pointer<ffi.Int8> _Buffer,
    ffi.Pointer<ffi.Int8> _Drive,
    ffi.Pointer<ffi.Int8> _Dir,
    ffi.Pointer<ffi.Int8> _Filename,
    ffi.Pointer<ffi.Int8> _Ext,
  ) {
    return __makepath(
      _Buffer,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __makepath_ptr =
      _lookup<ffi.NativeFunction<_c__makepath>>('_makepath');
  late final _dart__makepath __makepath =
      __makepath_ptr.asFunction<_dart__makepath>();

  void _splitpath(
    ffi.Pointer<ffi.Int8> _FullPath,
    ffi.Pointer<ffi.Int8> _Drive,
    ffi.Pointer<ffi.Int8> _Dir,
    ffi.Pointer<ffi.Int8> _Filename,
    ffi.Pointer<ffi.Int8> _Ext,
  ) {
    return __splitpath(
      _FullPath,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __splitpath_ptr =
      _lookup<ffi.NativeFunction<_c__splitpath>>('_splitpath');
  late final _dart__splitpath __splitpath =
      __splitpath_ptr.asFunction<_dart__splitpath>();

  int _splitpath_s(
    ffi.Pointer<ffi.Int8> _FullPath,
    ffi.Pointer<ffi.Int8> _Drive,
    int _DriveCount,
    ffi.Pointer<ffi.Int8> _Dir,
    int _DirCount,
    ffi.Pointer<ffi.Int8> _Filename,
    int _FilenameCount,
    ffi.Pointer<ffi.Int8> _Ext,
    int _ExtCount,
  ) {
    return __splitpath_s(
      _FullPath,
      _Drive,
      _DriveCount,
      _Dir,
      _DirCount,
      _Filename,
      _FilenameCount,
      _Ext,
      _ExtCount,
    );
  }

  late final __splitpath_s_ptr =
      _lookup<ffi.NativeFunction<_c__splitpath_s>>('_splitpath_s');
  late final _dart__splitpath_s __splitpath_s =
      __splitpath_s_ptr.asFunction<_dart__splitpath_s>();

  int getenv_s(
    ffi.Pointer<ffi.Uint64> _RequiredCount,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Int8> _VarName,
  ) {
    return _getenv_s(
      _RequiredCount,
      _Buffer,
      _BufferCount,
      _VarName,
    );
  }

  late final _getenv_s_ptr =
      _lookup<ffi.NativeFunction<_c_getenv_s>>('getenv_s');
  late final _dart_getenv_s _getenv_s =
      _getenv_s_ptr.asFunction<_dart_getenv_s>();

  ffi.Pointer<ffi.Int32> __p___argc() {
    return ___p___argc();
  }

  late final ___p___argc_ptr =
      _lookup<ffi.NativeFunction<_c___p___argc>>('__p___argc');
  late final _dart___p___argc ___p___argc =
      ___p___argc_ptr.asFunction<_dart___p___argc>();

  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>> __p___argv() {
    return ___p___argv();
  }

  late final ___p___argv_ptr =
      _lookup<ffi.NativeFunction<_c___p___argv>>('__p___argv');
  late final _dart___p___argv ___p___argv =
      ___p___argv_ptr.asFunction<_dart___p___argv>();

  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Uint16>>> __p___wargv() {
    return ___p___wargv();
  }

  late final ___p___wargv_ptr =
      _lookup<ffi.NativeFunction<_c___p___wargv>>('__p___wargv');
  late final _dart___p___wargv ___p___wargv =
      ___p___wargv_ptr.asFunction<_dart___p___wargv>();

  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>> __p__environ() {
    return ___p__environ();
  }

  late final ___p__environ_ptr =
      _lookup<ffi.NativeFunction<_c___p__environ>>('__p__environ');
  late final _dart___p__environ ___p__environ =
      ___p__environ_ptr.asFunction<_dart___p__environ>();

  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Uint16>>> __p__wenviron() {
    return ___p__wenviron();
  }

  late final ___p__wenviron_ptr =
      _lookup<ffi.NativeFunction<_c___p__wenviron>>('__p__wenviron');
  late final _dart___p__wenviron ___p__wenviron =
      ___p__wenviron_ptr.asFunction<_dart___p__wenviron>();

  ffi.Pointer<ffi.Int8> getenv(
    ffi.Pointer<ffi.Int8> _VarName,
  ) {
    return _getenv(
      _VarName,
    );
  }

  late final _getenv_ptr = _lookup<ffi.NativeFunction<_c_getenv>>('getenv');
  late final _dart_getenv _getenv = _getenv_ptr.asFunction<_dart_getenv>();

  int _dupenv_s(
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _Buffer,
    ffi.Pointer<ffi.Uint64> _BufferCount,
    ffi.Pointer<ffi.Int8> _VarName,
  ) {
    return __dupenv_s(
      _Buffer,
      _BufferCount,
      _VarName,
    );
  }

  late final __dupenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__dupenv_s>>('_dupenv_s');
  late final _dart__dupenv_s __dupenv_s =
      __dupenv_s_ptr.asFunction<_dart__dupenv_s>();

  int system(
    ffi.Pointer<ffi.Int8> _Command,
  ) {
    return _system(
      _Command,
    );
  }

  late final _system_ptr = _lookup<ffi.NativeFunction<_c_system>>('system');
  late final _dart_system _system = _system_ptr.asFunction<_dart_system>();

  int _putenv(
    ffi.Pointer<ffi.Int8> _EnvString,
  ) {
    return __putenv(
      _EnvString,
    );
  }

  late final __putenv_ptr = _lookup<ffi.NativeFunction<_c__putenv>>('_putenv');
  late final _dart__putenv __putenv = __putenv_ptr.asFunction<_dart__putenv>();

  int _putenv_s(
    ffi.Pointer<ffi.Int8> _Name,
    ffi.Pointer<ffi.Int8> _Value,
  ) {
    return __putenv_s(
      _Name,
      _Value,
    );
  }

  late final __putenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__putenv_s>>('_putenv_s');
  late final _dart__putenv_s __putenv_s =
      __putenv_s_ptr.asFunction<_dart__putenv_s>();

  int _searchenv_s(
    ffi.Pointer<ffi.Int8> _Filename,
    ffi.Pointer<ffi.Int8> _VarName,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _BufferCount,
  ) {
    return __searchenv_s(
      _Filename,
      _VarName,
      _Buffer,
      _BufferCount,
    );
  }

  late final __searchenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__searchenv_s>>('_searchenv_s');
  late final _dart__searchenv_s __searchenv_s =
      __searchenv_s_ptr.asFunction<_dart__searchenv_s>();

  void _searchenv(
    ffi.Pointer<ffi.Int8> _Filename,
    ffi.Pointer<ffi.Int8> _VarName,
    ffi.Pointer<ffi.Int8> _Buffer,
  ) {
    return __searchenv(
      _Filename,
      _VarName,
      _Buffer,
    );
  }

  late final __searchenv_ptr =
      _lookup<ffi.NativeFunction<_c__searchenv>>('_searchenv');
  late final _dart__searchenv __searchenv =
      __searchenv_ptr.asFunction<_dart__searchenv>();

  void _seterrormode(
    int _Mode,
  ) {
    return __seterrormode(
      _Mode,
    );
  }

  late final __seterrormode_ptr =
      _lookup<ffi.NativeFunction<_c__seterrormode>>('_seterrormode');
  late final _dart__seterrormode __seterrormode =
      __seterrormode_ptr.asFunction<_dart__seterrormode>();

  void _beep(
    int _Frequency,
    int _Duration,
  ) {
    return __beep(
      _Frequency,
      _Duration,
    );
  }

  late final __beep_ptr = _lookup<ffi.NativeFunction<_c__beep>>('_beep');
  late final _dart__beep __beep = __beep_ptr.asFunction<_dart__beep>();

  void _sleep(
    int _Duration,
  ) {
    return __sleep(
      _Duration,
    );
  }

  late final __sleep_ptr = _lookup<ffi.NativeFunction<_c__sleep>>('_sleep');
  late final _dart__sleep __sleep = __sleep_ptr.asFunction<_dart__sleep>();

  ffi.Pointer<ffi.Int8> ecvt(
    double _Value,
    int _DigitCount,
    ffi.Pointer<ffi.Int32> _PtDec,
    ffi.Pointer<ffi.Int32> _PtSign,
  ) {
    return _ecvt_1(
      _Value,
      _DigitCount,
      _PtDec,
      _PtSign,
    );
  }

  late final _ecvt_ptr = _lookup<ffi.NativeFunction<_c_ecvt>>('ecvt');
  late final _dart_ecvt _ecvt_1 = _ecvt_ptr.asFunction<_dart_ecvt>();

  ffi.Pointer<ffi.Int8> fcvt(
    double _Value,
    int _FractionalDigitCount,
    ffi.Pointer<ffi.Int32> _PtDec,
    ffi.Pointer<ffi.Int32> _PtSign,
  ) {
    return _fcvt_1(
      _Value,
      _FractionalDigitCount,
      _PtDec,
      _PtSign,
    );
  }

  late final _fcvt_ptr = _lookup<ffi.NativeFunction<_c_fcvt>>('fcvt');
  late final _dart_fcvt _fcvt_1 = _fcvt_ptr.asFunction<_dart_fcvt>();

  ffi.Pointer<ffi.Int8> gcvt(
    double _Value,
    int _DigitCount,
    ffi.Pointer<ffi.Int8> _DstBuf,
  ) {
    return _gcvt_1(
      _Value,
      _DigitCount,
      _DstBuf,
    );
  }

  late final _gcvt_ptr = _lookup<ffi.NativeFunction<_c_gcvt>>('gcvt');
  late final _dart_gcvt _gcvt_1 = _gcvt_ptr.asFunction<_dart_gcvt>();

  ffi.Pointer<ffi.Int8> itoa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return _itoa_1(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final _itoa_ptr = _lookup<ffi.NativeFunction<_c_itoa>>('itoa');
  late final _dart_itoa _itoa_1 = _itoa_ptr.asFunction<_dart_itoa>();

  ffi.Pointer<ffi.Int8> ltoa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return _ltoa_1(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final _ltoa_ptr = _lookup<ffi.NativeFunction<_c_ltoa>>('ltoa');
  late final _dart_ltoa _ltoa_1 = _ltoa_ptr.asFunction<_dart_ltoa>();

  void swab(
    ffi.Pointer<ffi.Int8> _Buf1,
    ffi.Pointer<ffi.Int8> _Buf2,
    int _SizeInBytes,
  ) {
    return _swab_1(
      _Buf1,
      _Buf2,
      _SizeInBytes,
    );
  }

  late final _swab_ptr = _lookup<ffi.NativeFunction<_c_swab>>('swab');
  late final _dart_swab _swab_1 = _swab_ptr.asFunction<_dart_swab>();

  ffi.Pointer<ffi.Int8> ultoa(
    int _Value,
    ffi.Pointer<ffi.Int8> _Buffer,
    int _Radix,
  ) {
    return _ultoa_1(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final _ultoa_ptr = _lookup<ffi.NativeFunction<_c_ultoa>>('ultoa');
  late final _dart_ultoa _ultoa_1 = _ultoa_ptr.asFunction<_dart_ultoa>();

  int putenv(
    ffi.Pointer<ffi.Int8> _EnvString,
  ) {
    return _putenv_1(
      _EnvString,
    );
  }

  late final _putenv_ptr = _lookup<ffi.NativeFunction<_c_putenv>>('putenv');
  late final _dart_putenv _putenv_1 = _putenv_ptr.asFunction<_dart_putenv>();

  ffi.Pointer<ffi.NativeFunction<_onexit_t>> onexit(
    ffi.Pointer<ffi.NativeFunction<_onexit_t>> _Func,
  ) {
    return _onexit_1(
      _Func,
    );
  }

  late final _onexit_ptr = _lookup<ffi.NativeFunction<_c_onexit>>('onexit');
  late final _dart_onexit _onexit_1 = _onexit_ptr.asFunction<_dart_onexit>();

  /// Initialise the logger
  void lexibook_init_logger(
    int level,
  ) {
    return _lexibook_init_logger(
      level,
    );
  }

  late final _lexibook_init_logger_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_init_logger>>(
          'lexibook_init_logger');
  late final _dart_lexibook_init_logger _lexibook_init_logger =
      _lexibook_init_logger_ptr.asFunction<_dart_lexibook_init_logger>();

  /// Free sound system memory
  void lexibook_sound_system_free(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _lexibook_sound_system_free(
      ptr,
    );
  }

  late final _lexibook_sound_system_free_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_sound_system_free>>(
          'lexibook_sound_system_free');
  late final _dart_lexibook_sound_system_free _lexibook_sound_system_free =
      _lexibook_sound_system_free_ptr
          .asFunction<_dart_lexibook_sound_system_free>();

  /// Generate words from a sound system
  ffi.Pointer<lexibook_api_StringList> lexibook_generate_words(
    ffi.Pointer<ffi.Void> ptr,
    int number_of_words,
    int repartition,
  ) {
    return _lexibook_generate_words(
      ptr,
      number_of_words,
      repartition,
    );
  }

  late final _lexibook_generate_words_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_generate_words>>(
          'lexibook_generate_words');
  late final _dart_lexibook_generate_words _lexibook_generate_words =
      _lexibook_generate_words_ptr.asFunction<_dart_lexibook_generate_words>();

  /// # Safety
  /// Return the last error message
  ffi.Pointer<ffi.Int8> lexibook_last_error_message() {
    return _lexibook_last_error_message();
  }

  late final _lexibook_last_error_message_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_last_error_message>>(
          'lexibook_last_error_message');
  late final _dart_lexibook_last_error_message _lexibook_last_error_message =
      _lexibook_last_error_message_ptr
          .asFunction<_dart_lexibook_last_error_message>();

  /// Load a sound system from a string
  ffi.Pointer<ffi.Void> lexibook_parse_string(
    ffi.Pointer<ffi.Int8> input_c_char,
  ) {
    return _lexibook_parse_string(
      input_c_char,
    );
  }

  late final _lexibook_parse_string_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_parse_string>>(
          'lexibook_parse_string');
  late final _dart_lexibook_parse_string _lexibook_parse_string =
      _lexibook_parse_string_ptr.asFunction<_dart_lexibook_parse_string>();

  /// Load a sound system from a file
  ffi.Pointer<ffi.Void> lexibook_parse_file(
    ffi.Pointer<ffi.Int8> file,
  ) {
    return _lexibook_parse_file(
      file,
    );
  }

  late final _lexibook_parse_file_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_parse_file>>(
          'lexibook_parse_file');
  late final _dart_lexibook_parse_file _lexibook_parse_file =
      _lexibook_parse_file_ptr.asFunction<_dart_lexibook_parse_file>();

  /// Save a sound system to a file
  int lexibook_sound_system_save_file(
    ffi.Pointer<ffi.Void> ptr,
    ffi.Pointer<ffi.Int8> file,
  ) {
    return _lexibook_sound_system_save_file(
      ptr,
      file,
    );
  }

  late final _lexibook_sound_system_save_file_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_sound_system_save_file>>(
          'lexibook_sound_system_save_file');
  late final _dart_lexibook_sound_system_save_file
      _lexibook_sound_system_save_file = _lexibook_sound_system_save_file_ptr
          .asFunction<_dart_lexibook_sound_system_save_file>();

  /// Create a new souns system
  ffi.Pointer<ffi.Void> lexibook_sound_system_new() {
    return _lexibook_sound_system_new();
  }

  late final _lexibook_sound_system_new_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_sound_system_new>>(
          'lexibook_sound_system_new');
  late final _dart_lexibook_sound_system_new _lexibook_sound_system_new =
      _lexibook_sound_system_new_ptr
          .asFunction<_dart_lexibook_sound_system_new>();

  void lexibook_string_list_free(
    ffi.Pointer<lexibook_api_StringList> ptr,
  ) {
    return _lexibook_string_list_free(
      ptr,
    );
  }

  late final _lexibook_string_list_free_ptr =
      _lookup<ffi.NativeFunction<_c_lexibook_string_list_free>>(
          'lexibook_string_list_free');
  late final _dart_lexibook_string_list_free _lexibook_string_list_free =
      _lexibook_string_list_free_ptr
          .asFunction<_dart_lexibook_string_list_free>();
}

class __crt_locale_data_public extends ffi.Struct {
  external ffi.Pointer<ffi.Uint16> _locale_pctype;

  @ffi.Int32()
  external int _locale_mb_cur_max;

  @ffi.Uint32()
  external int _locale_lc_codepage;
}

class __crt_locale_data extends ffi.Opaque {}

class __crt_multibyte_data extends ffi.Opaque {}

class __crt_locale_pointers extends ffi.Struct {
  external ffi.Pointer<__crt_locale_data> locinfo;

  external ffi.Pointer<__crt_multibyte_data> mbcinfo;
}

class _Mbstatet extends ffi.Struct {
  @ffi.Uint64()
  external int _Wchar;

  @ffi.Uint16()
  external int _Byte;

  @ffi.Uint16()
  external int _State;
}

class div_t extends ffi.Struct {
  @ffi.Int32()
  external int quot;

  @ffi.Int32()
  external int rem;
}

class ldiv_t extends ffi.Struct {
  @ffi.Int64()
  external int quot;

  @ffi.Int64()
  external int rem;
}

class lldiv_t extends ffi.Struct {
  @ffi.Int64()
  external int quot;

  @ffi.Int64()
  external int rem;
}

class _LDOUBLE extends ffi.Struct {
  @ffi.Array.multi([10])
  external ffi.Array<ffi.Uint8> ld;
}

class _CRT_DOUBLE extends ffi.Struct {
  @ffi.Double()
  external double x;
}

class _CRT_FLOAT extends ffi.Struct {
  @ffi.Float()
  external double f;
}

class _LONGDOUBLE extends ffi.Opaque {}

class _LDBL12 extends ffi.Struct {
  @ffi.Array.multi([12])
  external ffi.Array<ffi.Uint8> ld12;
}

abstract class lexibook_api_LogLevel {
  static const int Trace = 0;
  static const int Debug = 1;
  static const int Info = 2;
  static const int Warn = 3;
  static const int Error = 4;
}

abstract class lexibook_api_MonoSyllableRepartition {
  static const int Always = 0;
  static const int Mostly = 1;
  static const int Frequent = 2;
  static const int LessFrequent = 3;
  static const int Rare = 4;
  static const int Never = 5;
}

class lexibook_api_StringList extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int8>> items;

  @ffi.Uint64()
  external int length;
}

const int _VCRT_COMPILER_PREPROCESSOR = 1;

const int _SAL_VERSION = 20;

const int __SAL_H_VERSION = 180000000;

const int _USE_DECLSPECS_FOR_SAL = 0;

const int _USE_ATTRIBUTES_FOR_SAL = 0;

const int _CRT_PACKING = 8;

const int _VCRUNTIME_DISABLED_WARNINGS = 4514;

const int _HAS_EXCEPTIONS = 1;

const int _WCHAR_T_DEFINED = 1;

const int NULL = 0;

const int _HAS_CXX17 = 0;

const int _HAS_CXX20 = 0;

const int _HAS_NODISCARD = 1;

const int __bool_true_false_are_defined = 1;

const int false_1 = 0;

const int true_1 = 1;

const int INT8_MIN = -128;

const int INT16_MIN = -32768;

const int INT32_MIN = -2147483648;

const int INT64_MIN = -9223372036854775808;

const int INT8_MAX = 127;

const int INT16_MAX = 32767;

const int INT32_MAX = 2147483647;

const int INT64_MAX = 9223372036854775807;

const int UINT8_MAX = 255;

const int UINT16_MAX = 65535;

const int UINT32_MAX = 4294967295;

const int UINT64_MAX = -1;

const int INT_LEAST8_MIN = -128;

const int INT_LEAST16_MIN = -32768;

const int INT_LEAST32_MIN = -2147483648;

const int INT_LEAST64_MIN = -9223372036854775808;

const int INT_LEAST8_MAX = 127;

const int INT_LEAST16_MAX = 32767;

const int INT_LEAST32_MAX = 2147483647;

const int INT_LEAST64_MAX = 9223372036854775807;

const int UINT_LEAST8_MAX = 255;

const int UINT_LEAST16_MAX = 65535;

const int UINT_LEAST32_MAX = 4294967295;

const int UINT_LEAST64_MAX = -1;

const int INT_FAST8_MIN = -128;

const int INT_FAST16_MIN = -2147483648;

const int INT_FAST32_MIN = -2147483648;

const int INT_FAST64_MIN = -9223372036854775808;

const int INT_FAST8_MAX = 127;

const int INT_FAST16_MAX = 2147483647;

const int INT_FAST32_MAX = 2147483647;

const int INT_FAST64_MAX = 9223372036854775807;

const int UINT_FAST8_MAX = 255;

const int UINT_FAST16_MAX = 4294967295;

const int UINT_FAST32_MAX = 4294967295;

const int UINT_FAST64_MAX = -1;

const int INTPTR_MIN = -9223372036854775808;

const int INTPTR_MAX = 9223372036854775807;

const int UINTPTR_MAX = -1;

const int INTMAX_MIN = -9223372036854775808;

const int INTMAX_MAX = 9223372036854775807;

const int UINTMAX_MAX = -1;

const int PTRDIFF_MIN = -9223372036854775808;

const int PTRDIFF_MAX = 9223372036854775807;

const int SIZE_MAX = -1;

const int SIG_ATOMIC_MIN = -2147483648;

const int SIG_ATOMIC_MAX = 2147483647;

const int WCHAR_MIN = 0;

const int WCHAR_MAX = 65535;

const int WINT_MIN = 0;

const int WINT_MAX = 65535;

const int _UCRT_DISABLED_WARNINGS = 4324;

const int _ARGMAX = 100;

const int _TRUNCATE = -1;

const int _CRT_INT_MAX = 2147483647;

const int _CRT_SIZE_MAX = -1;

const String __FILEW__ = 't';

const int _CRT_FUNCTIONS_REQUIRED = 1;

const int _CRT_HAS_CXX17 = 0;

const int _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE = 1;

const int _CRT_BUILD_DESKTOP_APP = 1;

const int _CRT_INTERNAL_NONSTDC_NAMES = 1;

const int __STDC_SECURE_LIB__ = 200411;

const int __GOT_SECURE_LIB__ = 200411;

const int __STDC_WANT_SECURE_LIB__ = 1;

const int _SECURECRT_FILL_BUFFER_PATTERN = 254;

const int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES = 0;

const int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT = 0;

const int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES = 1;

const int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY = 0;

const int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY = 0;

const int _MAX_ITOSTR_BASE16_COUNT = 9;

const int _MAX_ITOSTR_BASE10_COUNT = 12;

const int _MAX_ITOSTR_BASE8_COUNT = 12;

const int _MAX_ITOSTR_BASE2_COUNT = 33;

const int _MAX_LTOSTR_BASE16_COUNT = 9;

const int _MAX_LTOSTR_BASE10_COUNT = 12;

const int _MAX_LTOSTR_BASE8_COUNT = 12;

const int _MAX_LTOSTR_BASE2_COUNT = 33;

const int _MAX_ULTOSTR_BASE16_COUNT = 9;

const int _MAX_ULTOSTR_BASE10_COUNT = 11;

const int _MAX_ULTOSTR_BASE8_COUNT = 12;

const int _MAX_ULTOSTR_BASE2_COUNT = 33;

const int _MAX_I64TOSTR_BASE16_COUNT = 17;

const int _MAX_I64TOSTR_BASE10_COUNT = 21;

const int _MAX_I64TOSTR_BASE8_COUNT = 23;

const int _MAX_I64TOSTR_BASE2_COUNT = 65;

const int _MAX_U64TOSTR_BASE16_COUNT = 17;

const int _MAX_U64TOSTR_BASE10_COUNT = 21;

const int _MAX_U64TOSTR_BASE8_COUNT = 23;

const int _MAX_U64TOSTR_BASE2_COUNT = 65;

const int CHAR_BIT = 8;

const int SCHAR_MIN = -128;

const int SCHAR_MAX = 127;

const int UCHAR_MAX = 255;

const int CHAR_MIN = -128;

const int CHAR_MAX = 127;

const int MB_LEN_MAX = 5;

const int SHRT_MIN = -32768;

const int SHRT_MAX = 32767;

const int USHRT_MAX = 65535;

const int INT_MIN = -2147483648;

const int INT_MAX = 2147483647;

const int UINT_MAX = 4294967295;

const int LONG_MIN = -2147483648;

const int LONG_MAX = 2147483647;

const int ULONG_MAX = 4294967295;

const int LLONG_MAX = 9223372036854775807;

const int LLONG_MIN = -9223372036854775808;

const int ULLONG_MAX = -1;

const int _I8_MIN = -128;

const int _I8_MAX = 127;

const int _UI8_MAX = 255;

const int _I16_MIN = -32768;

const int _I16_MAX = 32767;

const int _UI16_MAX = 65535;

const int _I32_MIN = -2147483648;

const int _I32_MAX = 2147483647;

const int _UI32_MAX = 4294967295;

const int _I64_MIN = -9223372036854775808;

const int _I64_MAX = 9223372036854775807;

const int _UI64_MAX = -1;

const int RSIZE_MAX = 9223372036854775807;

const int EXIT_SUCCESS = 0;

const int EXIT_FAILURE = 1;

const int _WRITE_ABORT_MSG = 1;

const int _CALL_REPORTFAULT = 2;

const int _OUT_TO_DEFAULT = 0;

const int _OUT_TO_STDERR = 1;

const int _OUT_TO_MSGBOX = 2;

const int _REPORT_ERRMODE = 3;

const int RAND_MAX = 32767;

const int _CVTBUFSIZE = 349;

const int _MAX_PATH = 260;

const int _MAX_DRIVE = 3;

const int _MAX_DIR = 256;

const int _MAX_FNAME = 256;

const int _MAX_EXT = 256;

const int _MAX_ENV = 32767;

typedef _c___va_start = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> arg0,
);

typedef _dart___va_start = void Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> arg0,
);

typedef _c___security_init_cookie = ffi.Void Function();

typedef _dart___security_init_cookie = void Function();

typedef _c___security_check_cookie = ffi.Void Function(
  ffi.Uint64 _StackCookie,
);

typedef _dart___security_check_cookie = void Function(
  int _StackCookie,
);

typedef _c___report_gsfailure = ffi.Void Function(
  ffi.Uint64 _StackCookie,
);

typedef _dart___report_gsfailure = void Function(
  int _StackCookie,
);

typedef _c__invalid_parameter_noinfo = ffi.Void Function();

typedef _dart__invalid_parameter_noinfo = void Function();

typedef _c__invalid_parameter_noinfo_noreturn = ffi.Void Function();

typedef _dart__invalid_parameter_noinfo_noreturn = void Function();

typedef _c__invoke_watson = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _Expression,
  ffi.Pointer<ffi.Uint16> _FunctionName,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Uint32 _LineNo,
  ffi.Uint64 _Reserved,
);

typedef _dart__invoke_watson = void Function(
  ffi.Pointer<ffi.Uint16> _Expression,
  ffi.Pointer<ffi.Uint16> _FunctionName,
  ffi.Pointer<ffi.Uint16> _FileName,
  int _LineNo,
  int _Reserved,
);

typedef _c__calloc_base = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 _Count,
  ffi.Uint64 _Size,
);

typedef _dart__calloc_base = ffi.Pointer<ffi.Void> Function(
  int _Count,
  int _Size,
);

typedef _c_calloc = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 _Count,
  ffi.Uint64 _Size,
);

typedef _dart_calloc = ffi.Pointer<ffi.Void> Function(
  int _Count,
  int _Size,
);

typedef _c__callnewh = ffi.Int32 Function(
  ffi.Uint64 _Size,
);

typedef _dart__callnewh = int Function(
  int _Size,
);

typedef _c__expand = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Size,
);

typedef _dart__expand = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Size,
);

typedef _c__free_base = ffi.Void Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _dart__free_base = void Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _c_free = ffi.Void Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _dart_free = void Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _c__malloc_base = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 _Size,
);

typedef _dart__malloc_base = ffi.Pointer<ffi.Void> Function(
  int _Size,
);

typedef _c_malloc = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 _Size,
);

typedef _dart_malloc = ffi.Pointer<ffi.Void> Function(
  int _Size,
);

typedef _c__msize_base = ffi.Uint64 Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _dart__msize_base = int Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _c__msize = ffi.Uint64 Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _dart__msize = int Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _c__realloc_base = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Size,
);

typedef _dart__realloc_base = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Size,
);

typedef _c_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Size,
);

typedef _dart_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Size,
);

typedef _c__recalloc_base = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Count,
  ffi.Uint64 _Size,
);

typedef _dart__recalloc_base = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Count,
  int _Size,
);

typedef _c__recalloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Count,
  ffi.Uint64 _Size,
);

typedef _dart__recalloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Count,
  int _Size,
);

typedef _c__aligned_free = ffi.Void Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _dart__aligned_free = void Function(
  ffi.Pointer<ffi.Void> _Block,
);

typedef _c__aligned_malloc = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 _Size,
  ffi.Uint64 _Alignment,
);

typedef _dart__aligned_malloc = ffi.Pointer<ffi.Void> Function(
  int _Size,
  int _Alignment,
);

typedef _c__aligned_offset_malloc = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 _Size,
  ffi.Uint64 _Alignment,
  ffi.Uint64 _Offset,
);

typedef _dart__aligned_offset_malloc = ffi.Pointer<ffi.Void> Function(
  int _Size,
  int _Alignment,
  int _Offset,
);

typedef _c__aligned_msize = ffi.Uint64 Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Alignment,
  ffi.Uint64 _Offset,
);

typedef _dart__aligned_msize = int Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Alignment,
  int _Offset,
);

typedef _c__aligned_offset_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Size,
  ffi.Uint64 _Alignment,
  ffi.Uint64 _Offset,
);

typedef _dart__aligned_offset_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Size,
  int _Alignment,
  int _Offset,
);

typedef _c__aligned_offset_recalloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Count,
  ffi.Uint64 _Size,
  ffi.Uint64 _Alignment,
  ffi.Uint64 _Offset,
);

typedef _dart__aligned_offset_recalloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Count,
  int _Size,
  int _Alignment,
  int _Offset,
);

typedef _c__aligned_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Size,
  ffi.Uint64 _Alignment,
);

typedef _dart__aligned_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Size,
  int _Alignment,
);

typedef _c__aligned_recalloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  ffi.Uint64 _Count,
  ffi.Uint64 _Size,
  ffi.Uint64 _Alignment,
);

typedef _dart__aligned_recalloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Block,
  int _Count,
  int _Size,
  int _Alignment,
);

typedef _c__errno = ffi.Pointer<ffi.Int32> Function();

typedef _dart__errno = ffi.Pointer<ffi.Int32> Function();

typedef _c__set_errno = ffi.Int32 Function(
  ffi.Int32 _Value,
);

typedef _dart__set_errno = int Function(
  int _Value,
);

typedef _c__get_errno = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> _Value,
);

typedef _dart__get_errno = int Function(
  ffi.Pointer<ffi.Int32> _Value,
);

typedef _c___threadid = ffi.Uint64 Function();

typedef _dart___threadid = int Function();

typedef _c___threadhandle = ffi.Uint64 Function();

typedef _dart___threadhandle = int Function();

typedef _CoreCrtSecureSearchSortCompareFunction = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
);

typedef _c_bsearch_s = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Uint64 _NumOfElements,
  ffi.Uint64 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _dart_bsearch_s = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  int _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _c_qsort_s = ffi.Void Function(
  ffi.Pointer<ffi.Void> _Base,
  ffi.Uint64 _NumOfElements,
  ffi.Uint64 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _dart_qsort_s = void Function(
  ffi.Pointer<ffi.Void> _Base,
  int _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _CoreCrtNonSecureSearchSortCompareFunction = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
);

typedef _c_bsearch = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Uint64 _NumOfElements,
  ffi.Uint64 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _dart_bsearch = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  int _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _c_qsort = ffi.Void Function(
  ffi.Pointer<ffi.Void> _Base,
  ffi.Uint64 _NumOfElements,
  ffi.Uint64 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _dart_qsort = void Function(
  ffi.Pointer<ffi.Void> _Base,
  int _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _c__lfind_s = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  ffi.Uint64 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _dart__lfind_s = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _c__lfind = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  ffi.Uint32 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _dart__lfind = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _c__lsearch_s = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  ffi.Uint64 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _dart__lsearch_s = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtSecureSearchSortCompareFunction>>
      _CompareFunction,
  ffi.Pointer<ffi.Void> _Context,
);

typedef _c__lsearch = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  ffi.Uint32 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _dart__lsearch = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _c_lfind = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  ffi.Uint32 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _dart_lfind = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _c_lsearch = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  ffi.Uint32 _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _dart_lsearch = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Key,
  ffi.Pointer<ffi.Void> _Base,
  ffi.Pointer<ffi.Uint32> _NumOfElements,
  int _SizeOfElements,
  ffi.Pointer<ffi.NativeFunction<_CoreCrtNonSecureSearchSortCompareFunction>>
      _CompareFunction,
);

typedef _c__itow_s = ffi.Int32 Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__itow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__itow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__itow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__ltow_s = ffi.Int32 Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ltow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ltow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ltow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__ultow_s = ffi.Int32 Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ultow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ultow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ultow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c_wcstod = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _dart_wcstod = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _c__wcstod_l = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstod_l = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstol = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstol = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstol_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstol_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstoll = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstoll = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoll_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstoul = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstoul = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoul_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoul_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstoull = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstoull = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoull_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoull_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstof = ffi.Float Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _dart_wcstof = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _c__wcstof_l = ffi.Float Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstof_l = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtof = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtof = double Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtof_l = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtof_l = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtoi = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtoi = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtoi_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtoi_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtol = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtol = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtol_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtol_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtoll = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtoll = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtoll_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__i64tow_s = ffi.Int32 Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__i64tow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__i64tow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__i64tow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__ui64tow_s = ffi.Int32 Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ui64tow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ui64tow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ui64tow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__wtoi64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtoi64 = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtoi64_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtoi64_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcstoi64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart__wcstoi64 = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoi64_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoi64_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcstoui64 = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart__wcstoui64 = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoui64_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoui64_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wfullpath = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Path,
  ffi.Uint64 _BufferCount,
);

typedef _dart__wfullpath = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Path,
  int _BufferCount,
);

typedef _c__wmakepath_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _dart__wmakepath_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _c__wmakepath = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _dart__wmakepath = void Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _c__wperror = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _ErrorMessage,
);

typedef _dart__wperror = void Function(
  ffi.Pointer<ffi.Uint16> _ErrorMessage,
);

typedef _c__wsplitpath = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _dart__wsplitpath = void Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _c__wsplitpath_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Uint64 _DriveCount,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Uint64 _DirCount,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Uint64 _FilenameCount,
  ffi.Pointer<ffi.Uint16> _Ext,
  ffi.Uint64 _ExtCount,
);

typedef _dart__wsplitpath_s = int Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  int _DriveCount,
  ffi.Pointer<ffi.Uint16> _Dir,
  int _DirCount,
  ffi.Pointer<ffi.Uint16> _Filename,
  int _FilenameCount,
  ffi.Pointer<ffi.Uint16> _Ext,
  int _ExtCount,
);

typedef _c__wdupenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Buffer,
  ffi.Pointer<ffi.Uint64> _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _dart__wdupenv_s = int Function(
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Buffer,
  ffi.Pointer<ffi.Uint64> _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _c__wgetenv = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _dart__wgetenv = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _c__wgetenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _RequiredCount,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _dart__wgetenv_s = int Function(
  ffi.Pointer<ffi.Uint64> _RequiredCount,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _c__wputenv = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _EnvString,
);

typedef _dart__wputenv = int Function(
  ffi.Pointer<ffi.Uint16> _EnvString,
);

typedef _c__wputenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Name,
  ffi.Pointer<ffi.Uint16> _Value,
);

typedef _dart__wputenv_s = int Function(
  ffi.Pointer<ffi.Uint16> _Name,
  ffi.Pointer<ffi.Uint16> _Value,
);

typedef _c__wsearchenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
);

typedef _dart__wsearchenv_s = int Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
);

typedef _c__wsearchenv = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _ResultPath,
);

typedef _dart__wsearchenv = void Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _ResultPath,
);

typedef _c__wsystem = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Command,
);

typedef _dart__wsystem = int Function(
  ffi.Pointer<ffi.Uint16> _Command,
);

typedef _c__swab = ffi.Void Function(
  ffi.Pointer<ffi.Int8> _Buf1,
  ffi.Pointer<ffi.Int8> _Buf2,
  ffi.Int32 _SizeInBytes,
);

typedef _dart__swab = void Function(
  ffi.Pointer<ffi.Int8> _Buf1,
  ffi.Pointer<ffi.Int8> _Buf2,
  int _SizeInBytes,
);

typedef _c_exit = ffi.Void Function(
  ffi.Int32 _Code,
);

typedef _dart_exit = void Function(
  int _Code,
);

typedef _c__exit = ffi.Void Function(
  ffi.Int32 _Code,
);

typedef _dart__exit = void Function(
  int _Code,
);

typedef _c__Exit = ffi.Void Function(
  ffi.Int32 _Code,
);

typedef _dart__Exit = void Function(
  int _Code,
);

typedef _c_quick_exit = ffi.Void Function(
  ffi.Int32 _Code,
);

typedef _dart_quick_exit = void Function(
  int _Code,
);

typedef _c_abort = ffi.Void Function();

typedef _dart_abort = void Function();

typedef _c__set_abort_behavior = ffi.Uint32 Function(
  ffi.Uint32 _Flags,
  ffi.Uint32 _Mask,
);

typedef _dart__set_abort_behavior = int Function(
  int _Flags,
  int _Mask,
);

typedef _typedefC_1 = ffi.Void Function();

typedef _c_atexit = ffi.Int32 Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_1>> arg0,
);

typedef _dart_atexit = int Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_1>> arg0,
);

typedef _onexit_t = ffi.Int32 Function();

typedef _c__onexit = ffi.Pointer<ffi.NativeFunction<_onexit_t>> Function(
  ffi.Pointer<ffi.NativeFunction<_onexit_t>> _Func,
);

typedef _dart__onexit = ffi.Pointer<ffi.NativeFunction<_onexit_t>> Function(
  ffi.Pointer<ffi.NativeFunction<_onexit_t>> _Func,
);

typedef _typedefC_2 = ffi.Void Function();

typedef _c_at_quick_exit = ffi.Int32 Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_2>> arg0,
);

typedef _dart_at_quick_exit = int Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_2>> arg0,
);

typedef _purecall_handler = ffi.Void Function();

typedef _c__set_purecall_handler
    = ffi.Pointer<ffi.NativeFunction<_purecall_handler>> Function(
  ffi.Pointer<ffi.NativeFunction<_purecall_handler>> _Handler,
);

typedef _dart__set_purecall_handler
    = ffi.Pointer<ffi.NativeFunction<_purecall_handler>> Function(
  ffi.Pointer<ffi.NativeFunction<_purecall_handler>> _Handler,
);

typedef _c__get_purecall_handler
    = ffi.Pointer<ffi.NativeFunction<_purecall_handler>> Function();

typedef _dart__get_purecall_handler
    = ffi.Pointer<ffi.NativeFunction<_purecall_handler>> Function();

typedef _invalid_parameter_handler = ffi.Void Function(
  ffi.Pointer<ffi.Uint16>,
  ffi.Pointer<ffi.Uint16>,
  ffi.Pointer<ffi.Uint16>,
  ffi.Uint32,
  ffi.Uint64,
);

typedef _c__set_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function(
  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> _Handler,
);

typedef _dart__set_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function(
  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> _Handler,
);

typedef _c__get_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function();

typedef _dart__get_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function();

typedef _c__set_thread_local_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function(
  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> _Handler,
);

typedef _dart__set_thread_local_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function(
  ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> _Handler,
);

typedef _c__get_thread_local_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function();

typedef _dart__get_thread_local_invalid_parameter_handler
    = ffi.Pointer<ffi.NativeFunction<_invalid_parameter_handler>> Function();

typedef _c__set_error_mode = ffi.Int32 Function(
  ffi.Int32 _Mode,
);

typedef _dart__set_error_mode = int Function(
  int _Mode,
);

typedef _c___doserrno = ffi.Pointer<ffi.Uint64> Function();

typedef _dart___doserrno = ffi.Pointer<ffi.Uint64> Function();

typedef _c__set_doserrno = ffi.Int32 Function(
  ffi.Uint64 _Value,
);

typedef _dart__set_doserrno = int Function(
  int _Value,
);

typedef _c__get_doserrno = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _Value,
);

typedef _dart__get_doserrno = int Function(
  ffi.Pointer<ffi.Uint64> _Value,
);

typedef _c___sys_errlist = ffi.Pointer<ffi.Pointer<ffi.Int8>> Function();

typedef _dart___sys_errlist = ffi.Pointer<ffi.Pointer<ffi.Int8>> Function();

typedef _c___sys_nerr = ffi.Pointer<ffi.Int32> Function();

typedef _dart___sys_nerr = ffi.Pointer<ffi.Int32> Function();

typedef _c_perror = ffi.Void Function(
  ffi.Pointer<ffi.Int8> _ErrMsg,
);

typedef _dart_perror = void Function(
  ffi.Pointer<ffi.Int8> _ErrMsg,
);

typedef _c___p__pgmptr = ffi.Pointer<ffi.Pointer<ffi.Int8>> Function();

typedef _dart___p__pgmptr = ffi.Pointer<ffi.Pointer<ffi.Int8>> Function();

typedef _c___p__wpgmptr = ffi.Pointer<ffi.Pointer<ffi.Uint16>> Function();

typedef _dart___p__wpgmptr = ffi.Pointer<ffi.Pointer<ffi.Uint16>> Function();

typedef _c___p__fmode = ffi.Pointer<ffi.Int32> Function();

typedef _dart___p__fmode = ffi.Pointer<ffi.Int32> Function();

typedef _c__get_pgmptr = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _Value,
);

typedef _dart__get_pgmptr = int Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _Value,
);

typedef _c__get_wpgmptr = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Value,
);

typedef _dart__get_wpgmptr = int Function(
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Value,
);

typedef _c__set_fmode = ffi.Int32 Function(
  ffi.Int32 _Mode,
);

typedef _dart__set_fmode = int Function(
  int _Mode,
);

typedef _c__get_fmode = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> _PMode,
);

typedef _dart__get_fmode = int Function(
  ffi.Pointer<ffi.Int32> _PMode,
);

typedef _c_abs = ffi.Int32 Function(
  ffi.Int32 _Number,
);

typedef _dart_abs = int Function(
  int _Number,
);

typedef _c_labs = ffi.Int64 Function(
  ffi.Int64 _Number,
);

typedef _dart_labs = int Function(
  int _Number,
);

typedef _c_llabs = ffi.Int64 Function(
  ffi.Int64 _Number,
);

typedef _dart_llabs = int Function(
  int _Number,
);

typedef _c__abs64 = ffi.Int64 Function(
  ffi.Int64 _Number,
);

typedef _dart__abs64 = int Function(
  int _Number,
);

typedef _c__byteswap_ushort = ffi.Uint16 Function(
  ffi.Uint16 _Number,
);

typedef _dart__byteswap_ushort = int Function(
  int _Number,
);

typedef _c__byteswap_ulong = ffi.Uint64 Function(
  ffi.Uint64 _Number,
);

typedef _dart__byteswap_ulong = int Function(
  int _Number,
);

typedef _c__byteswap_uint64 = ffi.Uint64 Function(
  ffi.Uint64 _Number,
);

typedef _dart__byteswap_uint64 = int Function(
  int _Number,
);

typedef _c_div = div_t Function(
  ffi.Int32 _Numerator,
  ffi.Int32 _Denominator,
);

typedef _dart_div = div_t Function(
  int _Numerator,
  int _Denominator,
);

typedef _c_ldiv = ldiv_t Function(
  ffi.Int64 _Numerator,
  ffi.Int64 _Denominator,
);

typedef _dart_ldiv = ldiv_t Function(
  int _Numerator,
  int _Denominator,
);

typedef _c_lldiv = lldiv_t Function(
  ffi.Int64 _Numerator,
  ffi.Int64 _Denominator,
);

typedef _dart_lldiv = lldiv_t Function(
  int _Numerator,
  int _Denominator,
);

typedef _c__rotl = ffi.Uint32 Function(
  ffi.Uint32 _Value,
  ffi.Int32 _Shift,
);

typedef _dart__rotl = int Function(
  int _Value,
  int _Shift,
);

typedef _c__lrotl = ffi.Uint64 Function(
  ffi.Uint64 _Value,
  ffi.Int32 _Shift,
);

typedef _dart__lrotl = int Function(
  int _Value,
  int _Shift,
);

typedef _c__rotl64 = ffi.Uint64 Function(
  ffi.Uint64 _Value,
  ffi.Int32 _Shift,
);

typedef _dart__rotl64 = int Function(
  int _Value,
  int _Shift,
);

typedef _c__rotr = ffi.Uint32 Function(
  ffi.Uint32 _Value,
  ffi.Int32 _Shift,
);

typedef _dart__rotr = int Function(
  int _Value,
  int _Shift,
);

typedef _c__lrotr = ffi.Uint64 Function(
  ffi.Uint64 _Value,
  ffi.Int32 _Shift,
);

typedef _dart__lrotr = int Function(
  int _Value,
  int _Shift,
);

typedef _c__rotr64 = ffi.Uint64 Function(
  ffi.Uint64 _Value,
  ffi.Int32 _Shift,
);

typedef _dart__rotr64 = int Function(
  int _Value,
  int _Shift,
);

typedef _c_srand = ffi.Void Function(
  ffi.Uint32 _Seed,
);

typedef _dart_srand = void Function(
  int _Seed,
);

typedef _c_rand = ffi.Int32 Function();

typedef _dart_rand = int Function();

typedef _c_atof = ffi.Double Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart_atof = double Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c_atoi = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart_atoi = int Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c_atol = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart_atol = int Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c_atoll = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart_atoll = int Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c__atoi64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart__atoi64 = int Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c__atof_l = ffi.Double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atof_l = double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atoi_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atoi_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atol_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atol_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atoll_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atoll_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atoi64_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atoi64_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atoflt = ffi.Int32 Function(
  ffi.Pointer<_CRT_FLOAT> _Result,
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart__atoflt = int Function(
  ffi.Pointer<_CRT_FLOAT> _Result,
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c__atodbl = ffi.Int32 Function(
  ffi.Pointer<_CRT_DOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart__atodbl = int Function(
  ffi.Pointer<_CRT_DOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c__atoldbl = ffi.Int32 Function(
  ffi.Pointer<_LDOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart__atoldbl = int Function(
  ffi.Pointer<_LDOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c__atoflt_l = ffi.Int32 Function(
  ffi.Pointer<_CRT_FLOAT> _Result,
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atoflt_l = int Function(
  ffi.Pointer<_CRT_FLOAT> _Result,
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atodbl_l = ffi.Int32 Function(
  ffi.Pointer<_CRT_DOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atodbl_l = int Function(
  ffi.Pointer<_CRT_DOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__atoldbl_l = ffi.Int32 Function(
  ffi.Pointer<_LDOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__atoldbl_l = int Function(
  ffi.Pointer<_LDOUBLE> _Result,
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_strtof = ffi.Float Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
);

typedef _dart_strtof = double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
);

typedef _c__strtof_l = ffi.Float Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtof_l = double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_strtod = ffi.Double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
);

typedef _dart_strtod = double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
);

typedef _c__strtod_l = ffi.Double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtod_l = double Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_strtol = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_strtol = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
);

typedef _c__strtol_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtol_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_strtoll = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_strtoll = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
);

typedef _c__strtoll_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtoll_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_strtoul = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_strtoul = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
);

typedef _c__strtoul_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtoul_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_strtoull = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_strtoull = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
);

typedef _c__strtoull_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtoull_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__strtoi64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart__strtoi64 = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
);

typedef _c__strtoi64_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtoi64_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__strtoui64 = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart__strtoui64 = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
);

typedef _c__strtoui64_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__strtoui64_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__itoa_s = ffi.Int32 Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__itoa_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__itoa = ffi.Pointer<ffi.Int8> Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__itoa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c__ltoa_s = ffi.Int32 Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ltoa_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ltoa = ffi.Pointer<ffi.Int8> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ltoa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c__ultoa_s = ffi.Int32 Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ultoa_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ultoa = ffi.Pointer<ffi.Int8> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ultoa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c__i64toa_s = ffi.Int32 Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__i64toa_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__i64toa = ffi.Pointer<ffi.Int8> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__i64toa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c__ui64toa_s = ffi.Int32 Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ui64toa_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ui64toa = ffi.Pointer<ffi.Int8> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ui64toa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c__ecvt_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Double _Value,
  ffi.Int32 _DigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _dart__ecvt_s = int Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  double _Value,
  int _DigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _c__ecvt = ffi.Pointer<ffi.Int8> Function(
  ffi.Double _Value,
  ffi.Int32 _DigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _dart__ecvt = ffi.Pointer<ffi.Int8> Function(
  double _Value,
  int _DigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _c__fcvt_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Double _Value,
  ffi.Int32 _FractionalDigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _dart__fcvt_s = int Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  double _Value,
  int _FractionalDigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _c__fcvt = ffi.Pointer<ffi.Int8> Function(
  ffi.Double _Value,
  ffi.Int32 _FractionalDigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _dart__fcvt = ffi.Pointer<ffi.Int8> Function(
  double _Value,
  int _FractionalDigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _c__gcvt_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Double _Value,
  ffi.Int32 _DigitCount,
);

typedef _dart__gcvt_s = int Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  double _Value,
  int _DigitCount,
);

typedef _c__gcvt = ffi.Pointer<ffi.Int8> Function(
  ffi.Double _Value,
  ffi.Int32 _DigitCount,
  ffi.Pointer<ffi.Int8> _Buffer,
);

typedef _dart__gcvt = ffi.Pointer<ffi.Int8> Function(
  double _Value,
  int _DigitCount,
  ffi.Pointer<ffi.Int8> _Buffer,
);

typedef _c____mb_cur_max_func = ffi.Int32 Function();

typedef _dart____mb_cur_max_func = int Function();

typedef _c____mb_cur_max_l_func = ffi.Int32 Function(
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart____mb_cur_max_l_func = int Function(
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_mblen = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Ch,
  ffi.Uint64 _MaxCount,
);

typedef _dart_mblen = int Function(
  ffi.Pointer<ffi.Int8> _Ch,
  int _MaxCount,
);

typedef _c__mblen_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Ch,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__mblen_l = int Function(
  ffi.Pointer<ffi.Int8> _Ch,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__mbstrlen = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _dart__mbstrlen = int Function(
  ffi.Pointer<ffi.Int8> _String,
);

typedef _c__mbstrlen_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__mbstrlen_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__mbstrnlen = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Uint64 _MaxCount,
);

typedef _dart__mbstrnlen = int Function(
  ffi.Pointer<ffi.Int8> _String,
  int _MaxCount,
);

typedef _c__mbstrnlen_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _String,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__mbstrnlen_l = int Function(
  ffi.Pointer<ffi.Int8> _String,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_mbtowc = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _DstCh,
  ffi.Pointer<ffi.Int8> _SrcCh,
  ffi.Uint64 _SrcSizeInBytes,
);

typedef _dart_mbtowc = int Function(
  ffi.Pointer<ffi.Uint16> _DstCh,
  ffi.Pointer<ffi.Int8> _SrcCh,
  int _SrcSizeInBytes,
);

typedef _c__mbtowc_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _DstCh,
  ffi.Pointer<ffi.Int8> _SrcCh,
  ffi.Uint64 _SrcSizeInBytes,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__mbtowc_l = int Function(
  ffi.Pointer<ffi.Uint16> _DstCh,
  ffi.Pointer<ffi.Int8> _SrcCh,
  int _SrcSizeInBytes,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_mbstowcs_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Uint16> _DstBuf,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Int8> _SrcBuf,
  ffi.Uint64 _MaxCount,
);

typedef _dart_mbstowcs_s = int Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Uint16> _DstBuf,
  int _SizeInWords,
  ffi.Pointer<ffi.Int8> _SrcBuf,
  int _MaxCount,
);

typedef _c_mbstowcs = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Dest,
  ffi.Pointer<ffi.Int8> _Source,
  ffi.Uint64 _MaxCount,
);

typedef _dart_mbstowcs = int Function(
  ffi.Pointer<ffi.Uint16> _Dest,
  ffi.Pointer<ffi.Int8> _Source,
  int _MaxCount,
);

typedef _c__mbstowcs_s_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Uint16> _DstBuf,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Int8> _SrcBuf,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__mbstowcs_s_l = int Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Uint16> _DstBuf,
  int _SizeInWords,
  ffi.Pointer<ffi.Int8> _SrcBuf,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__mbstowcs_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Dest,
  ffi.Pointer<ffi.Int8> _Source,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__mbstowcs_l = int Function(
  ffi.Pointer<ffi.Uint16> _Dest,
  ffi.Pointer<ffi.Int8> _Source,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wctomb = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _MbCh,
  ffi.Uint16 _WCh,
);

typedef _dart_wctomb = int Function(
  ffi.Pointer<ffi.Int8> _MbCh,
  int _WCh,
);

typedef _c__wctomb_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _MbCh,
  ffi.Uint16 _WCh,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wctomb_l = int Function(
  ffi.Pointer<ffi.Int8> _MbCh,
  int _WCh,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wctomb_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> _SizeConverted,
  ffi.Pointer<ffi.Int8> _MbCh,
  ffi.Uint64 _SizeInBytes,
  ffi.Uint16 _WCh,
);

typedef _dart_wctomb_s = int Function(
  ffi.Pointer<ffi.Int32> _SizeConverted,
  ffi.Pointer<ffi.Int8> _MbCh,
  int _SizeInBytes,
  int _WCh,
);

typedef _c__wctomb_s_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> _SizeConverted,
  ffi.Pointer<ffi.Int8> _MbCh,
  ffi.Uint64 _SizeInBytes,
  ffi.Uint16 _WCh,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wctomb_s_l = int Function(
  ffi.Pointer<ffi.Int32> _SizeConverted,
  ffi.Pointer<ffi.Int8> _MbCh,
  int _SizeInBytes,
  int _WCh,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstombs_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Int8> _Dst,
  ffi.Uint64 _DstSizeInBytes,
  ffi.Pointer<ffi.Uint16> _Src,
  ffi.Uint64 _MaxCountInBytes,
);

typedef _dart_wcstombs_s = int Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Int8> _Dst,
  int _DstSizeInBytes,
  ffi.Pointer<ffi.Uint16> _Src,
  int _MaxCountInBytes,
);

typedef _c_wcstombs = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcstombs = int Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
);

typedef _c__wcstombs_s_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Int8> _Dst,
  ffi.Uint64 _DstSizeInBytes,
  ffi.Pointer<ffi.Uint16> _Src,
  ffi.Uint64 _MaxCountInBytes,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstombs_s_l = int Function(
  ffi.Pointer<ffi.Uint64> _PtNumOfCharConverted,
  ffi.Pointer<ffi.Int8> _Dst,
  int _DstSizeInBytes,
  ffi.Pointer<ffi.Uint16> _Src,
  int _MaxCountInBytes,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcstombs_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstombs_l = int Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__fullpath = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Pointer<ffi.Int8> _Path,
  ffi.Uint64 _BufferCount,
);

typedef _dart__fullpath = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Pointer<ffi.Int8> _Path,
  int _BufferCount,
);

typedef _c__makepath_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _Ext,
);

typedef _dart__makepath_s = int Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _Ext,
);

typedef _c__makepath = ffi.Void Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _Ext,
);

typedef _dart__makepath = void Function(
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _Ext,
);

typedef _c__splitpath = ffi.Void Function(
  ffi.Pointer<ffi.Int8> _FullPath,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _Ext,
);

typedef _dart__splitpath = void Function(
  ffi.Pointer<ffi.Int8> _FullPath,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _Ext,
);

typedef _c__splitpath_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _FullPath,
  ffi.Pointer<ffi.Int8> _Drive,
  ffi.Uint64 _DriveCount,
  ffi.Pointer<ffi.Int8> _Dir,
  ffi.Uint64 _DirCount,
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Uint64 _FilenameCount,
  ffi.Pointer<ffi.Int8> _Ext,
  ffi.Uint64 _ExtCount,
);

typedef _dart__splitpath_s = int Function(
  ffi.Pointer<ffi.Int8> _FullPath,
  ffi.Pointer<ffi.Int8> _Drive,
  int _DriveCount,
  ffi.Pointer<ffi.Int8> _Dir,
  int _DirCount,
  ffi.Pointer<ffi.Int8> _Filename,
  int _FilenameCount,
  ffi.Pointer<ffi.Int8> _Ext,
  int _ExtCount,
);

typedef _c_getenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _RequiredCount,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Int8> _VarName,
);

typedef _dart_getenv_s = int Function(
  ffi.Pointer<ffi.Uint64> _RequiredCount,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Int8> _VarName,
);

typedef _c___p___argc = ffi.Pointer<ffi.Int32> Function();

typedef _dart___p___argc = ffi.Pointer<ffi.Int32> Function();

typedef _c___p___argv = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>>
    Function();

typedef _dart___p___argv = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>>
    Function();

typedef _c___p___wargv = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Uint16>>>
    Function();

typedef _dart___p___wargv = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Uint16>>>
    Function();

typedef _c___p__environ = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>>
    Function();

typedef _dart___p__environ = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>>
    Function();

typedef _c___p__wenviron = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Uint16>>>
    Function();

typedef _dart___p__wenviron = ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Uint16>>>
    Function();

typedef _c_getenv = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _VarName,
);

typedef _dart_getenv = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _VarName,
);

typedef _c__dupenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _Buffer,
  ffi.Pointer<ffi.Uint64> _BufferCount,
  ffi.Pointer<ffi.Int8> _VarName,
);

typedef _dart__dupenv_s = int Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _Buffer,
  ffi.Pointer<ffi.Uint64> _BufferCount,
  ffi.Pointer<ffi.Int8> _VarName,
);

typedef _c_system = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Command,
);

typedef _dart_system = int Function(
  ffi.Pointer<ffi.Int8> _Command,
);

typedef _c__putenv = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _EnvString,
);

typedef _dart__putenv = int Function(
  ffi.Pointer<ffi.Int8> _EnvString,
);

typedef _c__putenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Name,
  ffi.Pointer<ffi.Int8> _Value,
);

typedef _dart__putenv_s = int Function(
  ffi.Pointer<ffi.Int8> _Name,
  ffi.Pointer<ffi.Int8> _Value,
);

typedef _c__searchenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _VarName,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Uint64 _BufferCount,
);

typedef _dart__searchenv_s = int Function(
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _VarName,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _BufferCount,
);

typedef _c__searchenv = ffi.Void Function(
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _VarName,
  ffi.Pointer<ffi.Int8> _Buffer,
);

typedef _dart__searchenv = void Function(
  ffi.Pointer<ffi.Int8> _Filename,
  ffi.Pointer<ffi.Int8> _VarName,
  ffi.Pointer<ffi.Int8> _Buffer,
);

typedef _c__seterrormode = ffi.Void Function(
  ffi.Int32 _Mode,
);

typedef _dart__seterrormode = void Function(
  int _Mode,
);

typedef _c__beep = ffi.Void Function(
  ffi.Uint32 _Frequency,
  ffi.Uint32 _Duration,
);

typedef _dart__beep = void Function(
  int _Frequency,
  int _Duration,
);

typedef _c__sleep = ffi.Void Function(
  ffi.Uint64 _Duration,
);

typedef _dart__sleep = void Function(
  int _Duration,
);

typedef _c_ecvt = ffi.Pointer<ffi.Int8> Function(
  ffi.Double _Value,
  ffi.Int32 _DigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _dart_ecvt = ffi.Pointer<ffi.Int8> Function(
  double _Value,
  int _DigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _c_fcvt = ffi.Pointer<ffi.Int8> Function(
  ffi.Double _Value,
  ffi.Int32 _FractionalDigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _dart_fcvt = ffi.Pointer<ffi.Int8> Function(
  double _Value,
  int _FractionalDigitCount,
  ffi.Pointer<ffi.Int32> _PtDec,
  ffi.Pointer<ffi.Int32> _PtSign,
);

typedef _c_gcvt = ffi.Pointer<ffi.Int8> Function(
  ffi.Double _Value,
  ffi.Int32 _DigitCount,
  ffi.Pointer<ffi.Int8> _DstBuf,
);

typedef _dart_gcvt = ffi.Pointer<ffi.Int8> Function(
  double _Value,
  int _DigitCount,
  ffi.Pointer<ffi.Int8> _DstBuf,
);

typedef _c_itoa = ffi.Pointer<ffi.Int8> Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart_itoa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c_ltoa = ffi.Pointer<ffi.Int8> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart_ltoa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c_swab = ffi.Void Function(
  ffi.Pointer<ffi.Int8> _Buf1,
  ffi.Pointer<ffi.Int8> _Buf2,
  ffi.Int32 _SizeInBytes,
);

typedef _dart_swab = void Function(
  ffi.Pointer<ffi.Int8> _Buf1,
  ffi.Pointer<ffi.Int8> _Buf2,
  int _SizeInBytes,
);

typedef _c_ultoa = ffi.Pointer<ffi.Int8> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart_ultoa = ffi.Pointer<ffi.Int8> Function(
  int _Value,
  ffi.Pointer<ffi.Int8> _Buffer,
  int _Radix,
);

typedef _c_putenv = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _EnvString,
);

typedef _dart_putenv = int Function(
  ffi.Pointer<ffi.Int8> _EnvString,
);

typedef _c_onexit = ffi.Pointer<ffi.NativeFunction<_onexit_t>> Function(
  ffi.Pointer<ffi.NativeFunction<_onexit_t>> _Func,
);

typedef _dart_onexit = ffi.Pointer<ffi.NativeFunction<_onexit_t>> Function(
  ffi.Pointer<ffi.NativeFunction<_onexit_t>> _Func,
);

typedef _c_lexibook_init_logger = ffi.Void Function(
  ffi.Uint8 level,
);

typedef _dart_lexibook_init_logger = void Function(
  int level,
);

typedef _c_lexibook_sound_system_free = ffi.Void Function(
  ffi.Pointer<ffi.Void> ptr,
);

typedef _dart_lexibook_sound_system_free = void Function(
  ffi.Pointer<ffi.Void> ptr,
);

typedef _c_lexibook_generate_words = ffi.Pointer<lexibook_api_StringList>
    Function(
  ffi.Pointer<ffi.Void> ptr,
  ffi.Uint32 number_of_words,
  ffi.Uint8 repartition,
);

typedef _dart_lexibook_generate_words = ffi.Pointer<lexibook_api_StringList>
    Function(
  ffi.Pointer<ffi.Void> ptr,
  int number_of_words,
  int repartition,
);

typedef _c_lexibook_last_error_message = ffi.Pointer<ffi.Int8> Function();

typedef _dart_lexibook_last_error_message = ffi.Pointer<ffi.Int8> Function();

typedef _c_lexibook_parse_string = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Int8> input_c_char,
);

typedef _dart_lexibook_parse_string = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Int8> input_c_char,
);

typedef _c_lexibook_parse_file = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Int8> file,
);

typedef _dart_lexibook_parse_file = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Int8> file,
);

typedef _c_lexibook_sound_system_save_file = ffi.Uint8 Function(
  ffi.Pointer<ffi.Void> ptr,
  ffi.Pointer<ffi.Int8> file,
);

typedef _dart_lexibook_sound_system_save_file = int Function(
  ffi.Pointer<ffi.Void> ptr,
  ffi.Pointer<ffi.Int8> file,
);

typedef _c_lexibook_sound_system_new = ffi.Pointer<ffi.Void> Function();

typedef _dart_lexibook_sound_system_new = ffi.Pointer<ffi.Void> Function();

typedef _c_lexibook_string_list_free = ffi.Void Function(
  ffi.Pointer<lexibook_api_StringList> ptr,
);

typedef _dart_lexibook_string_list_free = void Function(
  ffi.Pointer<lexibook_api_StringList> ptr,
);
